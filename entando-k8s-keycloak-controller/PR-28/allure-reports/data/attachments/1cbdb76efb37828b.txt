---
fileSystemUserAndGroupId: 185
externalService:
  path: "/auth"
  mixins:
  - "ExternalService"
  port: 8080
  host: "kc.apps.serv.run"
  createDelegateService: false
replicas: 1
customResource:
  apiVersion: "entando.org/v1"
  kind: "EntandoKeycloakServer"
  metadata:
    name: "specified-sso"
    namespace: "my-namespace"
  isCustomResource: true
secrets: []
ingressNamespace: "my-namespace"
mixins:
- "DbAwareDeployable"
- "Secretive"
- "Deployable"
- "IngressingDeployable"
defaultServiceAccountName: "default"
ingressRequired: false
ingressName: "specified-sso-ingress"
expectingDatabaseSchemas: false
containers:
- environmentVariableOverrides: []
  memoryLimitMebibytes: 768
  dockerImageInfo:
    organization: "entando"
    repository: "entando-redhat-sso"
  volumeMountPath: "/opt/eap/standalone/data"
  namesOfSecretsToMount: []
  additionalPorts: []
  primaryPort: 8080
  storageLimitMebibytes: 2048
  webContextPath: "/auth"
  mixins:
  - "ServiceBackingContainer"
  - "IngressingContainer"
  - "PersistentVolumeAwareContainer"
  - "ConfigurableResourceContainer"
  - "IngressingPathOnPort"
  - "DeployableContainer"
  - "HasWebContext"
  - "DbAwareContainer"
  - "ParameterizableContainer"
  healthCheckPath: "/auth"
  maximumStartupTimeSeconds: 180
  databaseConnectionVariables: []
  kubernetesPermissions: []
  environmentVariables:
  - name: "SSO_ADMIN_USERNAME"
    valueFrom:
      secretKeyRef:
        key: "username"
        name: "my-existing-sso-admin-secret"
        optional: false
  - name: "SSO_ADMIN_PASSWORD"
    valueFrom:
      secretKeyRef:
        key: "password"
        name: "my-existing-sso-admin-secret"
        optional: false
  - name: "PROXY_ADDRESS_FORWARDING"
    value: "true"
  schemaConnectionInfo: []
  nameQualifier: "server"
  secretsToMount: []
  cpuLimitMillicores: 1000
  portForIngressPath: 8080
serviceAccountToUse: "default"
