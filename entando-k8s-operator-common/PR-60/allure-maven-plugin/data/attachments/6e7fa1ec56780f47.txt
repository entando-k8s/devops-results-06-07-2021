---
mixins:
- "Secretive"
- "Deployable"
defaultServiceAccountName: "default"
externalService:
  mixins:
  - "ExternalService"
  port: 3307
  host: "10.0.0.234"
  createDelegateService: true
replicas: 1
customResource:
  apiVersion: "test.org/v1"
  kind: "TestResource"
  metadata:
    name: "specified-dbms"
    namespace: "my-namespace"
  isCustomResource: true
containers:
- memoryLimitMebibytes: 256
  dockerImageInfo:
    organization: "centos"
    repository: "mysql-80-centos7"
  volumeMountPath: "/var/lib/mysql/data"
  namesOfSecretsToMount: []
  additionalPorts: []
  primaryPort: 3306
  storageLimitMebibytes: 2048
  mixins:
  - "ServiceBackingContainer"
  - "DeployableContainer"
  - "PersistentVolumeAwareContainer"
  - "HasHealthCommand"
  healthCheckCommand: "MYSQL_PWD=${MYSQL_ROOT_PASSWORD} mysql -h 127.0.0.1 -u root\
    \ -e 'SELECT 1'"
  kubernetesPermissions: []
  environmentVariables:
  - name: "DB_ADMIN"
    value: "root"
  nameQualifier: "db"
  secretsToMount: []
  cpuLimitMillicores: 500
secrets:
- apiVersion: "v1"
  kind: "Secret"
  metadata:
    labels:
      TestResource: "specified-dbms"
    name: "specified-dbms-admin-secret"
    ownerReferences:
    - apiVersion: "test.org/v1"
      kind: "TestResource"
      blockOwnerDeletion: true
      controller: true
      name: "specified-dbms"
      uid: "7a8455f8-45f6-4420-9936-f9f7c3704b54"
  stringData:
    username: "root"
    password: "62a92562c5fe44dd"
serviceAccountToUse: "default"
