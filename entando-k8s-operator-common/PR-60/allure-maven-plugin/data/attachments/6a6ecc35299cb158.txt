---
mixins:
- "Deployable"
- "Secretive"
- "DbAwareDeployable"
defaultServiceAccountName: "default"
replicas: 1
expectingDatabaseSchemas: true
customResource:
  apiVersion: "test.org/v1"
  kind: "TestResource"
  metadata:
    name: "my-app"
    namespace: "my-namespace"
  isCustomResource: true
containers:
- memoryLimitMebibytes: 256
  dockerImageInfo:
    organization: "test"
    repository: "my-spring-boot-image"
    tag: "6.3.2"
  namesOfSecretsToMount: []
  additionalPorts: []
  databasePopulator:
    mixins:
    - "DatabasePopulator"
    environmentVariables:
    - name: "SPRING_DATASOURCE_USERNAME"
      valueFrom:
        secretKeyRef:
          key: "username"
          name: "my-app-server-secret"
          optional: false
    - name: "SPRING_DATASOURCE_PASSWORD"
      valueFrom:
        secretKeyRef:
          key: "password"
          name: "my-app-server-secret"
          optional: false
    - name: "SPRING_DATASOURCE_URL"
      value: "jdbc:postgresql://default-postgresql-dbms-in-namespace-service.my-namespace.svc.cluster.local:5432/my_db"
    - name: "SPRING_JPA_DATABASE_PLATFORM"
      value: "org.hibernate.dialect.PostgreSQLDialect"
    dockerImageInfo:
      organization: "test"
      repository: "my-spring-boot-image"
      tag: "6.3.2"
    command:
    - "java"
    - "-jar"
    - "/deployments/myapp.jar"
    - "--prepare-db"
  storageLimitMebibytes: 0
  primaryPort: 8081
  mixins:
  - "DeployableContainer"
  - "DbAwareContainer"
  - "PersistentVolumeAwareContainer"
  databaseConnectionVariables:
  - name: "SPRING_DATASOURCE_USERNAME"
    valueFrom:
      secretKeyRef:
        key: "username"
        name: "my-app-server-secret"
        optional: false
  - name: "SPRING_DATASOURCE_PASSWORD"
    valueFrom:
      secretKeyRef:
        key: "password"
        name: "my-app-server-secret"
        optional: false
  - name: "SPRING_DATASOURCE_URL"
    value: "jdbc:postgresql://default-postgresql-dbms-in-namespace-service.my-namespace.svc.cluster.local:5432/my_db"
  - name: "SPRING_JPA_DATABASE_PLATFORM"
    value: "org.hibernate.dialect.PostgreSQLDialect"
  kubernetesPermissions: []
  environmentVariables: []
  schemaConnectionInfo:
  - schemaSecret:
      apiVersion: "v1"
      kind: "Secret"
      metadata:
        labels:
          TestResource: "my-app"
        name: "my-app-server-secret"
        ownerReferences:
        - apiVersion: "test.org/v1"
          kind: "TestResource"
          blockOwnerDeletion: true
          controller: true
          name: "my-app"
          uid: "a3a6b1e3-bc79-4e06-9cb0-0b5e521d2854"
      stringData:
        username: "my_app_server"
        password: "fff926f295944e2b"
    mixins:
    - "DatabaseSchemaConnectionInfo"
    database: "my_db"
    passwordRef:
      secretKeyRef:
        key: "password"
        name: "my-app-server-secret"
        optional: false
    usernameRef:
      secretKeyRef:
        key: "username"
        name: "my-app-server-secret"
        optional: false
    jdbcUrl: "jdbc:postgresql://default-postgresql-dbms-in-namespace-service.my-namespace.svc.cluster.local:5432/my_db"
    schemaName: "my_app_server"
    databaseServiceResult:
      internalServiceHostname: "default-postgresql-dbms-in-namespace-service.my-namespace.svc.cluster.local"
      mixins:
      - "DatabaseConnectionInfo"
      - "ServiceResult"
      databaseName: "my_db"
      port: "5432"
      vendor: "POSTGRESQL"
      adminSecretName: "default-postgresql-dbms-in-namespace-admin-secret"
      service:
        apiVersion: "v1"
        kind: "Service"
        metadata:
          name: "default-postgresql-dbms-in-namespace-service"
          namespace: "my-namespace"
        spec:
          clusterIP: "10.0.0.-70"
          ports:
          - port: 5432
    schemaSecretName: "my-app-server-secret"
  nameQualifier: "server"
  secretsToMount: []
  cpuLimitMillicores: 500
secrets: []
serviceAccountToUse: "default"
