---
apiVersion: "test.org/v1"
kind: "TestResource"
metadata:
  generation: 1
  name: "my-app"
  namespace: "my-namespace"
  resourceVersion: "7046272"
  uid: "b669a910-d343-4138-a891-f5ad5fad0577"
spec:
  replicas: 1
status:
  serverStatuses:
    main: !<InternalServerStatus>
      qualifier: "main"
      type: "InternalServerStatus"
      started: "2021-06-14T17:30:17+0000"
      finished: "2021-06-14T17:30:17+0000"
      podPhases:
        my-app-dbprep-db08: "Failed"
      persistentVolumeClaimPhases:
        my-app-server-pvc: "Pending"
      entandoControllerFailure:
        failedObjectType: "TestResource"
        failedObjectName: "my-namespace/my-app"
        message: "Database preparation failed. Please inspect the logs of the pod\
          \ my-namespace/my-app-dbprep-db08"
        detailMessage: "org.entando.kubernetes.controller.spi.common.EntandoControllerException:\
          \ Database preparation failed. Please inspect the logs of the pod my-namespace/my-app-dbprep-db08\n\
          \tat org.entando.kubernetes.controller.support.command.DeployCommand.prepareDbSchemas(DeployCommand.java:223)\n\
          \tat org.entando.kubernetes.controller.support.command.DeployCommand.deployServiceInternally(DeployCommand.java:148)\n\
          \tat org.entando.kubernetes.controller.support.command.DeployCommand.lambda$execute$0(DeployCommand.java:104)\n\
          \tat java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264)\n\
          \tat java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1128)\n\
          \tat java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:628)\n\
          \tat java.base/java.lang.Thread.run(Thread.java:834)\n"
  observedGeneration: 1
  phase: "failed"
crdName: "testresources.test.org"
