---
apiVersion: "v1"
kind: "Pod"
metadata:
  labels:
    EntandoResourceKind: "EntandoApp"
    jobKind: "db-preparation-job"
    EntandoResourceNamespace: "my-namespace"
    EntandoApp: "my-app"
    deploymentQualifier: "cm"
  name: "my-app-dbprep-18bb"
  namespace: "my-namespace"
  ownerReferences:
  - apiVersion: "entando.org/v1"
    kind: "EntandoApp"
    blockOwnerDeletion: true
    controller: true
    name: "my-app"
    uid: "26d2ab7e-e18e-4387-af83-0c0610daa87c"
spec:
  containers:
  - image: "docker.io/entando/busybox:latest"
    name: "dummy"
  initContainers:
  - env:
    - name: "DATABASE_SERVER_HOST"
      value: "default-postgresql-dbms-in-namespace-service.my-namespace.svc.cluster.local"
    - name: "DATABASE_SERVER_PORT"
      value: "5432"
    - name: "DATABASE_ADMIN_USER"
      valueFrom:
        secretKeyRef:
          key: "username"
          name: "default-postgresql-dbms-in-namespace-admin-secret"
          optional: false
    - name: "DATABASE_ADMIN_PASSWORD"
      valueFrom:
        secretKeyRef:
          key: "password"
          name: "default-postgresql-dbms-in-namespace-admin-secret"
          optional: false
    - name: "DATABASE_NAME"
      value: "my_db"
    - name: "DATABASE_VENDOR"
      value: "postgresql"
    - name: "DATABASE_SCHEMA_COMMAND"
      value: "CREATE_SCHEMA"
    - name: "DATABASE_USER"
      valueFrom:
        secretKeyRef:
          key: "username"
          name: "my-app-dedb-secret"
          optional: false
    - name: "DATABASE_PASSWORD"
      valueFrom:
        secretKeyRef:
          key: "password"
          name: "my-app-dedb-secret"
          optional: false
    image: "docker.io/entando/entando-k8s-dbjob:latest"
    imagePullPolicy: "IfNotPresent"
    name: "my-app-dedb-schema-creation-job"
  restartPolicy: "Never"
status:
  containerStatuses:
  - state:
      terminated:
        exitCode: 0
        reason: "Complete"
  initContainerStatuses:
  - state:
      terminated:
        exitCode: 0
        reason: "Complete"
  phase: "Complete"
