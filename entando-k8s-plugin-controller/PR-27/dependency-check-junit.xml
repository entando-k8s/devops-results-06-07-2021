<?xml version="1.0" encoding="UTF-8"?><testsuites failures="83" name="dependency-check" tests="94"><testsuite failures="0" id="0" name="/home/jenkins/.mvnrepository/org/apache/james/apache-mime4j/0.6/apache-mime4j-0.6.jar" package="apache-mime4j-0.6.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="apache-mime4j-0.6.jar"/></testsuite><testsuite failures="4" id="1" name="/home/jenkins/.mvnrepository/io/quarkus/arc/arc/1.13.2.Final/arc-1.13.2.Final.jar" package="arc-1.13.2.Final.jar" skipped="0" tests="4" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2021-20289" name="pkg:maven/io.quarkus.arc/arc@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N)"/><system-out>A flaw was found in RESTEasy in all versions of RESTEasy up to 4.6.0.Final. The endpoint class and method names are returned as part of the exception response when RESTEasy cannot convert one of the request URI path or query values to the matching JAX-RS resource method&apos;s parameter value. The highest threat from this vulnerability is to data confidentiality.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/arc/arc/1.13.2.Final/arc-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2021-20328" name="pkg:maven/io.quarkus.arc/arc@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 6.8 (CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N)"/><system-out>Specific versions of the Java driver that support client-side field level encryption (CSFLE) fail to perform correct host name verification on the KMS server’s certificate. This vulnerability in combination with a privileged network position active MITM attack could result in interception of traffic between the Java driver and the KMS service rendering Field Level Encryption ineffective. This issue was discovered during internal testing and affects all versions of the Java driver that support CSFLE. The Java async, Scala, and reactive streams drivers are not impacted. This vulnerability does not impact driver traffic payloads with CSFLE-supported key services originating from applications residing inside the AWS, GCP, and Azure network fabrics due to compensating controls in these environments. This issue does not impact driver workloads that don’t use Field Level Encryption.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/arc/arc/1.13.2.Final/arc-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2021-21290" name="pkg:maven/io.quarkus.arc/arc@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 5.5 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N)"/><system-out>Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty&apos;s multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method &quot;File.createTempFile&quot; on unix-like systems creates a random file, but, by default will create this file with the permissions &quot;-rw-r--r--&quot;. Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty&apos;s &quot;AbstractDiskHttpData&quot; is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own &quot;java.io.tmpdir&quot; when you start the JVM or use &quot;DefaultHttpDataFactory.setBaseDir(...)&quot; to set the directory to something that is only readable by the current user.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/arc/arc/1.13.2.Final/arc-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2021-21295" name="pkg:maven/io.quarkus.arc/arc@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 5.9 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N)"/><system-out>Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. In Netty (io.netty:netty-codec-http2) before version 4.1.60.Final there is a vulnerability that enables request smuggling. If a Content-Length header is present in the original HTTP/2 request, the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is fine as long as the request is not proxied through as HTTP/1.1. If the request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1 domain objects (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel&apos;s pipeline and proxied through a remote peer as HTTP/1.1 this may result in request smuggling. In a proxy case, users may assume the content-length is validated somehow, which is not the case. If the request is forwarded to a backend channel that is a HTTP/1.1 connection, the Content-Length now has meaning and needs to be checked. An attacker can smuggle requests inside the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example attack refer to the linked GitHub Advisory. Users are only affected if all of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects, and these HTTP/1.1 objects are forwarded to another remote peer. This has been patched in 4.1.60.Final As a workaround, the user can do the validation by themselves by implementing a custom `ChannelInboundHandler` that is put in the `ChannelPipeline` behind `Http2StreamFrameToHttpObjectCodec`.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/arc/arc/1.13.2.Final/arc-1.13.2.Final.jar</system-err></testcase></testsuite><testsuite failures="0" id="2" name="/home/jenkins/.mvnrepository/dk/brics/automaton/automaton/1.11-8/automaton-1.11-8.jar" package="automaton-1.11-8.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="automaton-1.11-8.jar"/></testsuite><testsuite failures="0" id="3" name="/home/jenkins/.mvnrepository/org/bouncycastle/bcpkix-jdk15on/1.68/bcpkix-jdk15on-1.68.jar" package="bcpkix-jdk15on-1.68.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="bcpkix-jdk15on-1.68.jar"/></testsuite><testsuite failures="0" id="4" name="/home/jenkins/.mvnrepository/org/bouncycastle/bcprov-jdk15on/1.68/bcprov-jdk15on-1.68.jar" package="bcprov-jdk15on-1.68.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="bcprov-jdk15on-1.68.jar"/></testsuite><testsuite failures="0" id="5" name="/home/jenkins/.mvnrepository/com/github/fge/btf/1.2/btf-1.2.jar" package="btf-1.2.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="btf-1.2.jar"/></testsuite><testsuite failures="0" id="6" name="/home/jenkins/.mvnrepository/org/checkerframework/checker-qual/2.5.2/checker-qual-2.5.2.jar" package="checker-qual-2.5.2.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="checker-qual-2.5.2.jar"/></testsuite><testsuite failures="0" id="7" name="/home/jenkins/.mvnrepository/commons-codec/commons-codec/1.14/commons-codec-1.14.jar" package="commons-codec-1.14.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="commons-codec-1.14.jar"/></testsuite><testsuite failures="0" id="8" name="/home/jenkins/.mvnrepository/org/apache/commons/commons-compress/1.20/commons-compress-1.20.jar" package="commons-compress-1.20.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="commons-compress-1.20.jar"/></testsuite><testsuite failures="0" id="9" name="/home/jenkins/.mvnrepository/commons-io/commons-io/2.7/commons-io-2.7.jar" package="commons-io-2.7.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="commons-io-2.7.jar"/></testsuite><testsuite failures="0" id="10" name="/home/jenkins/.mvnrepository/org/apache/commons/commons-lang3/3.9/commons-lang3-3.9.jar" package="commons-lang3-3.9.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="commons-lang3-3.9.jar"/></testsuite><testsuite failures="0" id="11" name="/home/jenkins/.mvnrepository/commons-logging/commons-logging/1.2/commons-logging-1.2.jar" package="commons-logging-1.2.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="commons-logging-1.2.jar"/></testsuite><testsuite failures="16" id="12" name="/home/jenkins/.mvnrepository/org/entando/entando-k8s-custom-model/0.0.0-SNAPSHOT-PR-42-16/entando-k8s-custom-model-0.0.0-SNAPSHOT-PR-42-16.jar" package="entando-k8s-custom-model-0.0.0-SNAPSHOT-PR-42-16.jar" skipped="10" tests="26" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2017-18640" name="pkg:maven/org.entando/entando-k8s-custom-model@0.0.0-SNAPSHOT-PR-42-16"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>The Alias feature in SnakeYAML 1.18 allows entity expansion during a load operation, a related issue to CVE-2003-1564.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-custom-model/0.0.0-SNAPSHOT-PR-42-16/entando-k8s-custom-model-0.0.0-SNAPSHOT-PR-42-16.jar</system-err></testcase><testcase classname="CVE-2019-14900" name="pkg:maven/org.entando/entando-k8s-custom-model@0.0.0-SNAPSHOT-PR-42-16"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N)"/><system-out>A flaw was found in Hibernate ORM in versions before 5.3.18, 5.4.18 and 5.5.0.Beta1. A SQL injection in the implementation of the JPA Criteria API can permit unsanitized literals when a literal is used in the SELECT or GROUP BY parts of the query. This flaw could allow an attacker to access unauthorized information or possibly conduct further attacks.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-custom-model/0.0.0-SNAPSHOT-PR-42-16/entando-k8s-custom-model-0.0.0-SNAPSHOT-PR-42-16.jar</system-err></testcase><testcase classname="CVE-2020-10693" name="pkg:maven/org.entando/entando-k8s-custom-model@0.0.0-SNAPSHOT-PR-42-16"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N)"/><system-out>A flaw was found in Hibernate Validator version 6.1.2.Final. A bug in the message interpolation processor enables invalid EL expressions to be evaluated as if they were valid. This flaw allows attackers to bypass input sanitation (escaping, stripping) controls that developers may have put in place when handling user-controlled data in error messages.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-custom-model/0.0.0-SNAPSHOT-PR-42-16/entando-k8s-custom-model-0.0.0-SNAPSHOT-PR-42-16.jar</system-err></testcase><testcase classname="CVE-2020-13692" name="pkg:maven/org.entando/entando-k8s-custom-model@0.0.0-SNAPSHOT-PR-42-16"><failure message="cvssV3: HIGH, score: 7.7 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:L/A:H)"/><system-out>PostgreSQL JDBC Driver (aka PgJDBC) before 42.2.13 allows XXE.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-custom-model/0.0.0-SNAPSHOT-PR-42-16/entando-k8s-custom-model-0.0.0-SNAPSHOT-PR-42-16.jar</system-err></testcase><testcase classname="CVE-2020-13956" name="pkg:maven/org.entando/entando-k8s-custom-model@0.0.0-SNAPSHOT-PR-42-16"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N)"/><system-out>Apache HttpClient versions prior to version 4.5.13 and 5.0.3 can misinterpret malformed authority component in request URIs passed to the library as java.net.URI object and pick the wrong target host for request execution.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-custom-model/0.0.0-SNAPSHOT-PR-42-16/entando-k8s-custom-model-0.0.0-SNAPSHOT-PR-42-16.jar</system-err></testcase><testcase classname="CVE-2020-1714" name="pkg:maven/org.entando/entando-k8s-custom-model@0.0.0-SNAPSHOT-PR-42-16"><failure message="cvssV3: HIGH, score: 8.8 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H)"/><system-out>A flaw was found in Keycloak before version 11.0.0, where the code base contains usages of ObjectInputStream without type checks. This flaw allows an attacker to inject arbitrarily serialized Java Objects, which would then get deserialized in a privileged context and potentially lead to remote code execution.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-custom-model/0.0.0-SNAPSHOT-PR-42-16/entando-k8s-custom-model-0.0.0-SNAPSHOT-PR-42-16.jar</system-err></testcase><testcase classname="CVE-2020-1728" name="pkg:maven/org.entando/entando-k8s-custom-model@0.0.0-SNAPSHOT-PR-42-16"><failure message="cvssV3: MEDIUM, score: 5.4 (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N)"/><system-out>A vulnerability was found in all versions of Keycloak where, the pages on the Admin Console area of the application are completely missing general HTTP security headers in HTTP-responses. This does not directly lead to a security issue, yet it might aid attackers in their efforts to exploit other problems. The flaws unnecessarily make the servers more prone to Clickjacking, channel downgrade attacks and other similar client-based attack vectors.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-custom-model/0.0.0-SNAPSHOT-PR-42-16/entando-k8s-custom-model-0.0.0-SNAPSHOT-PR-42-16.jar</system-err></testcase><testcase classname="CVE-2020-25633" name="pkg:maven/org.entando/entando-k8s-custom-model@0.0.0-SNAPSHOT-PR-42-16"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N)"/><system-out>A flaw was found in RESTEasy client in all versions of RESTEasy up to 4.5.6.Final. It may allow client users to obtain the server&apos;s potentially sensitive information when the server got WebApplicationException from the RESTEasy client call. The highest threat from this vulnerability is to data confidentiality.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-custom-model/0.0.0-SNAPSHOT-PR-42-16/entando-k8s-custom-model-0.0.0-SNAPSHOT-PR-42-16.jar</system-err></testcase><testcase classname="CVE-2020-25638" name="pkg:maven/org.entando/entando-k8s-custom-model@0.0.0-SNAPSHOT-PR-42-16"><failure message="cvssV3: HIGH, score: 7.4 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N)"/><system-out>A flaw was found in hibernate-core in versions prior to and including 5.4.23.Final. A SQL injection in the implementation of the JPA Criteria API can permit unsanitized literals when a literal is used in the SQL comments of the query. This flaw could allow an attacker to access unauthorized information or possibly conduct further attacks. The highest threat from this vulnerability is to data confidentiality and integrity.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-custom-model/0.0.0-SNAPSHOT-PR-42-16/entando-k8s-custom-model-0.0.0-SNAPSHOT-PR-42-16.jar</system-err></testcase><testcase classname="CVE-2020-25649" name="pkg:maven/org.entando/entando-k8s-custom-model@0.0.0-SNAPSHOT-PR-42-16"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N)"/><system-out>A flaw was found in FasterXML Jackson Databind, where it did not have entity expansion secured properly. This flaw allows vulnerability to XML external entity (XXE) attacks. The highest threat from this vulnerability is data integrity.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-custom-model/0.0.0-SNAPSHOT-PR-42-16/entando-k8s-custom-model-0.0.0-SNAPSHOT-PR-42-16.jar</system-err></testcase><testcase classname="CVE-2020-25724" name="pkg:maven/org.entando/entando-k8s-custom-model@0.0.0-SNAPSHOT-PR-42-16"><failure message="cvssV3: MEDIUM, score: 4.3 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N)"/><system-out>A flaw was found in RESTEasy, where an incorrect response to an HTTP request is provided. This flaw allows an attacker to gain access to privileged information. The highest threat from this vulnerability is to confidentiality and integrity. Versions before resteasy 2.0.0.Alpha3 are affected.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-custom-model/0.0.0-SNAPSHOT-PR-42-16/entando-k8s-custom-model-0.0.0-SNAPSHOT-PR-42-16.jar</system-err></testcase><testcase classname="CVE-2020-8908" name="pkg:maven/org.entando/entando-k8s-custom-model@0.0.0-SNAPSHOT-PR-42-16"><failure message="cvssV3: LOW, score: 3.3 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N)"/><system-out>A temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime&apos;s java.io.tmpdir system property to point to a location whose permissions are appropriately configured.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-custom-model/0.0.0-SNAPSHOT-PR-42-16/entando-k8s-custom-model-0.0.0-SNAPSHOT-PR-42-16.jar</system-err></testcase><testcase classname="CVE-2021-20289" name="pkg:maven/org.entando/entando-k8s-custom-model@0.0.0-SNAPSHOT-PR-42-16"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N)"/><system-out>A flaw was found in RESTEasy in all versions of RESTEasy up to 4.6.0.Final. The endpoint class and method names are returned as part of the exception response when RESTEasy cannot convert one of the request URI path or query values to the matching JAX-RS resource method&apos;s parameter value. The highest threat from this vulnerability is to data confidentiality.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-custom-model/0.0.0-SNAPSHOT-PR-42-16/entando-k8s-custom-model-0.0.0-SNAPSHOT-PR-42-16.jar</system-err></testcase><testcase classname="CVE-2021-20328" name="pkg:maven/org.entando/entando-k8s-custom-model@0.0.0-SNAPSHOT-PR-42-16"><failure message="cvssV3: MEDIUM, score: 6.8 (CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N)"/><system-out>Specific versions of the Java driver that support client-side field level encryption (CSFLE) fail to perform correct host name verification on the KMS server’s certificate. This vulnerability in combination with a privileged network position active MITM attack could result in interception of traffic between the Java driver and the KMS service rendering Field Level Encryption ineffective. This issue was discovered during internal testing and affects all versions of the Java driver that support CSFLE. The Java async, Scala, and reactive streams drivers are not impacted. This vulnerability does not impact driver traffic payloads with CSFLE-supported key services originating from applications residing inside the AWS, GCP, and Azure network fabrics due to compensating controls in these environments. This issue does not impact driver workloads that don’t use Field Level Encryption.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-custom-model/0.0.0-SNAPSHOT-PR-42-16/entando-k8s-custom-model-0.0.0-SNAPSHOT-PR-42-16.jar</system-err></testcase><testcase classname="CVE-2021-21290" name="pkg:maven/org.entando/entando-k8s-custom-model@0.0.0-SNAPSHOT-PR-42-16"><failure message="cvssV3: MEDIUM, score: 5.5 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N)"/><system-out>Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty&apos;s multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method &quot;File.createTempFile&quot; on unix-like systems creates a random file, but, by default will create this file with the permissions &quot;-rw-r--r--&quot;. Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty&apos;s &quot;AbstractDiskHttpData&quot; is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own &quot;java.io.tmpdir&quot; when you start the JVM or use &quot;DefaultHttpDataFactory.setBaseDir(...)&quot; to set the directory to something that is only readable by the current user.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-custom-model/0.0.0-SNAPSHOT-PR-42-16/entando-k8s-custom-model-0.0.0-SNAPSHOT-PR-42-16.jar</system-err></testcase><testcase classname="CVE-2021-21295" name="pkg:maven/org.entando/entando-k8s-custom-model@0.0.0-SNAPSHOT-PR-42-16"><failure message="cvssV3: MEDIUM, score: 5.9 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N)"/><system-out>Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. In Netty (io.netty:netty-codec-http2) before version 4.1.60.Final there is a vulnerability that enables request smuggling. If a Content-Length header is present in the original HTTP/2 request, the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is fine as long as the request is not proxied through as HTTP/1.1. If the request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1 domain objects (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel&apos;s pipeline and proxied through a remote peer as HTTP/1.1 this may result in request smuggling. In a proxy case, users may assume the content-length is validated somehow, which is not the case. If the request is forwarded to a backend channel that is a HTTP/1.1 connection, the Content-Length now has meaning and needs to be checked. An attacker can smuggle requests inside the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example attack refer to the linked GitHub Advisory. Users are only affected if all of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects, and these HTTP/1.1 objects are forwarded to another remote peer. This has been patched in 4.1.60.Final As a workaround, the user can do the validation by themselves by implementing a custom `ChannelInboundHandler` that is put in the `ChannelPipeline` behind `Http2StreamFrameToHttpObjectCodec`.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-custom-model/0.0.0-SNAPSHOT-PR-42-16/entando-k8s-custom-model-0.0.0-SNAPSHOT-PR-42-16.jar</system-err></testcase><testcase classname="CVE-2020-8555" name="pkg:maven/org.entando/entando-k8s-custom-model@0.0.0-SNAPSHOT-PR-42-16"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The Kubernetes kube-controller-manager in versions v1.0-1.14, versions prior to v1.15.12, v1.16.9, v1.17.5, and version v1.18.0 are vulnerable to a Server Side Request Forgery (SSRF) that allows certain authorized users to leak up to 500 bytes of arbitrary information from unprotected endpoints within the master&apos;s host network (such as link-local or loopback services).</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-custom-model/0.0.0-SNAPSHOT-PR-42-16/entando-k8s-custom-model-0.0.0-SNAPSHOT-PR-42-16.jar</system-err></testcase><testcase classname="CVE-2019-11254" name="pkg:maven/org.entando/entando-k8s-custom-model@0.0.0-SNAPSHOT-PR-42-16"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The Kubernetes API Server component in versions 1.1-1.14, and versions prior to 1.15.10, 1.16.7 and 1.17.3 allows an authorized user who sends malicious YAML payloads to cause the kube-apiserver to consume excessive CPU cycles while parsing YAML.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-custom-model/0.0.0-SNAPSHOT-PR-42-16/entando-k8s-custom-model-0.0.0-SNAPSHOT-PR-42-16.jar</system-err></testcase><testcase classname="CVE-2020-8554" name="pkg:maven/org.entando/entando-k8s-custom-model@0.0.0-SNAPSHOT-PR-42-16"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes API server in all versions allow an attacker who is able to create a ClusterIP service and set the spec.externalIPs field, to intercept traffic to that IP address. Additionally, an attacker who is able to patch the status (which is considered a privileged operation and should not typically be granted to users) of a LoadBalancer service can set the status.loadBalancer.ingress.ip to similar effect.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-custom-model/0.0.0-SNAPSHOT-PR-42-16/entando-k8s-custom-model-0.0.0-SNAPSHOT-PR-42-16.jar</system-err></testcase><testcase classname="CVE-2019-1002100" name="pkg:maven/org.entando/entando-k8s-custom-model@0.0.0-SNAPSHOT-PR-42-16"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>In all Kubernetes versions prior to v1.11.8, v1.12.6, and v1.13.4, users that are authorized to make patch requests to the Kubernetes API Server can send a specially crafted patch of type &quot;json-patch&quot; (e.g. `kubectl patch --type json` or `&quot;Content-Type: application/json-patch+json&quot;`) that consumes excessive resources while processing, causing a Denial of Service on the API Server.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-custom-model/0.0.0-SNAPSHOT-PR-42-16/entando-k8s-custom-model-0.0.0-SNAPSHOT-PR-42-16.jar</system-err></testcase><testcase classname="CVE-2020-8552" name="pkg:maven/org.entando/entando-k8s-custom-model@0.0.0-SNAPSHOT-PR-42-16"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The Kubernetes API server component in versions prior to 1.15.9, 1.16.0-1.16.6, and 1.17.0-1.17.2 has been found to be vulnerable to a denial of service attack via successful API requests.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-custom-model/0.0.0-SNAPSHOT-PR-42-16/entando-k8s-custom-model-0.0.0-SNAPSHOT-PR-42-16.jar</system-err></testcase><testcase classname="CVE-2020-8563" name="pkg:maven/org.entando/entando-k8s-custom-model@0.0.0-SNAPSHOT-PR-42-16"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>In Kubernetes clusters using VSphere as a cloud provider, with a logging level set to 4 or above, VSphere cloud credentials will be leaked in the cloud controller manager&apos;s log. This affects &lt; v1.19.3.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-custom-model/0.0.0-SNAPSHOT-PR-42-16/entando-k8s-custom-model-0.0.0-SNAPSHOT-PR-42-16.jar</system-err></testcase><testcase classname="CVE-2019-11248" name="pkg:maven/org.entando/entando-k8s-custom-model@0.0.0-SNAPSHOT-PR-42-16"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The debugging endpoint /debug/pprof is exposed over the unauthenticated Kubelet healthz port. The go pprof endpoint is exposed over the Kubelet&apos;s healthz port. This debugging endpoint can potentially leak sensitive information such as internal Kubelet memory addresses and configuration, or for limited denial of service. Versions prior to 1.15.0, 1.14.4, 1.13.8, and 1.12.10 are affected. The issue is of medium severity, but not exposed by the default configuration.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-custom-model/0.0.0-SNAPSHOT-PR-42-16/entando-k8s-custom-model-0.0.0-SNAPSHOT-PR-42-16.jar</system-err></testcase><testcase classname="CVE-2019-9946" name="pkg:maven/org.entando/entando-k8s-custom-model@0.0.0-SNAPSHOT-PR-42-16"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Cloud Native Computing Foundation (CNCF) CNI (Container Networking Interface) 0.7.4 has a network firewall misconfiguration which affects Kubernetes. The CNI &apos;portmap&apos; plugin, used to setup HostPorts for CNI, inserts rules at the front of the iptables nat chains; which take precedence over the KUBE- SERVICES chain. Because of this, the HostPort/portmap rule could match incoming traffic even if there were better fitting, more specific service definition rules like NodePorts later in the chain. The issue is fixed in CNI 0.7.5 and Kubernetes 1.11.9, 1.12.7, 1.13.5, and 1.14.0.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-custom-model/0.0.0-SNAPSHOT-PR-42-16/entando-k8s-custom-model-0.0.0-SNAPSHOT-PR-42-16.jar</system-err></testcase><testcase classname="CVE-2019-11250" name="pkg:maven/org.entando/entando-k8s-custom-model@0.0.0-SNAPSHOT-PR-42-16"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The Kubernetes client-go library logs request headers at verbosity levels of 7 or higher. This can disclose credentials to unauthorized users via logs or command output. Kubernetes components (such as kube-apiserver) prior to v1.16.0, which make use of basic or bearer token authentication, and run at high verbosity levels, are affected.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-custom-model/0.0.0-SNAPSHOT-PR-42-16/entando-k8s-custom-model-0.0.0-SNAPSHOT-PR-42-16.jar</system-err></testcase><testcase classname="CVE-2020-8557" name="pkg:maven/org.entando/entando-k8s-custom-model@0.0.0-SNAPSHOT-PR-42-16"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The Kubernetes kubelet component in versions 1.1-1.16.12, 1.17.0-1.17.8 and 1.18.0-1.18.5 do not account for disk usage by a pod which writes to its own /etc/hosts file. The /etc/hosts file mounted in a pod by kubelet is not included by the kubelet eviction manager when calculating ephemeral storage usage by a pod. If a pod writes a large amount of data to the /etc/hosts file, it could fill the storage space of the node and cause the node to fail.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-custom-model/0.0.0-SNAPSHOT-PR-42-16/entando-k8s-custom-model-0.0.0-SNAPSHOT-PR-42-16.jar</system-err></testcase></testsuite><testsuite failures="16" id="13" name="/home/jenkins/.mvnrepository/org/entando/entando-k8s-operator-common/0.0.0-SNAPSHOT-PR-60-56/entando-k8s-operator-common-0.0.0-SNAPSHOT-PR-60-56.jar" package="entando-k8s-operator-common-0.0.0-SNAPSHOT-PR-60-56.jar" skipped="0" tests="16" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2017-18640" name="pkg:maven/org.entando/entando-k8s-operator-common@0.0.0-SNAPSHOT-PR-60-56"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>The Alias feature in SnakeYAML 1.18 allows entity expansion during a load operation, a related issue to CVE-2003-1564.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-operator-common/0.0.0-SNAPSHOT-PR-60-56/entando-k8s-operator-common-0.0.0-SNAPSHOT-PR-60-56.jar</system-err></testcase><testcase classname="CVE-2019-14900" name="pkg:maven/org.entando/entando-k8s-operator-common@0.0.0-SNAPSHOT-PR-60-56"><failure message="cvssV3: MEDIUM, score: 6.5 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N)"/><system-out>A flaw was found in Hibernate ORM in versions before 5.3.18, 5.4.18 and 5.5.0.Beta1. A SQL injection in the implementation of the JPA Criteria API can permit unsanitized literals when a literal is used in the SELECT or GROUP BY parts of the query. This flaw could allow an attacker to access unauthorized information or possibly conduct further attacks.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-operator-common/0.0.0-SNAPSHOT-PR-60-56/entando-k8s-operator-common-0.0.0-SNAPSHOT-PR-60-56.jar</system-err></testcase><testcase classname="CVE-2020-10693" name="pkg:maven/org.entando/entando-k8s-operator-common@0.0.0-SNAPSHOT-PR-60-56"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N)"/><system-out>A flaw was found in Hibernate Validator version 6.1.2.Final. A bug in the message interpolation processor enables invalid EL expressions to be evaluated as if they were valid. This flaw allows attackers to bypass input sanitation (escaping, stripping) controls that developers may have put in place when handling user-controlled data in error messages.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-operator-common/0.0.0-SNAPSHOT-PR-60-56/entando-k8s-operator-common-0.0.0-SNAPSHOT-PR-60-56.jar</system-err></testcase><testcase classname="CVE-2020-13692" name="pkg:maven/org.entando/entando-k8s-operator-common@0.0.0-SNAPSHOT-PR-60-56"><failure message="cvssV3: HIGH, score: 7.7 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:L/A:H)"/><system-out>PostgreSQL JDBC Driver (aka PgJDBC) before 42.2.13 allows XXE.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-operator-common/0.0.0-SNAPSHOT-PR-60-56/entando-k8s-operator-common-0.0.0-SNAPSHOT-PR-60-56.jar</system-err></testcase><testcase classname="CVE-2020-13956" name="pkg:maven/org.entando/entando-k8s-operator-common@0.0.0-SNAPSHOT-PR-60-56"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:L/A:N)"/><system-out>Apache HttpClient versions prior to version 4.5.13 and 5.0.3 can misinterpret malformed authority component in request URIs passed to the library as java.net.URI object and pick the wrong target host for request execution.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-operator-common/0.0.0-SNAPSHOT-PR-60-56/entando-k8s-operator-common-0.0.0-SNAPSHOT-PR-60-56.jar</system-err></testcase><testcase classname="CVE-2020-1714" name="pkg:maven/org.entando/entando-k8s-operator-common@0.0.0-SNAPSHOT-PR-60-56"><failure message="cvssV3: HIGH, score: 8.8 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:H/I:H/A:H)"/><system-out>A flaw was found in Keycloak before version 11.0.0, where the code base contains usages of ObjectInputStream without type checks. This flaw allows an attacker to inject arbitrarily serialized Java Objects, which would then get deserialized in a privileged context and potentially lead to remote code execution.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-operator-common/0.0.0-SNAPSHOT-PR-60-56/entando-k8s-operator-common-0.0.0-SNAPSHOT-PR-60-56.jar</system-err></testcase><testcase classname="CVE-2020-1728" name="pkg:maven/org.entando/entando-k8s-operator-common@0.0.0-SNAPSHOT-PR-60-56"><failure message="cvssV3: MEDIUM, score: 5.4 (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:U/C:L/I:L/A:N)"/><system-out>A vulnerability was found in all versions of Keycloak where, the pages on the Admin Console area of the application are completely missing general HTTP security headers in HTTP-responses. This does not directly lead to a security issue, yet it might aid attackers in their efforts to exploit other problems. The flaws unnecessarily make the servers more prone to Clickjacking, channel downgrade attacks and other similar client-based attack vectors.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-operator-common/0.0.0-SNAPSHOT-PR-60-56/entando-k8s-operator-common-0.0.0-SNAPSHOT-PR-60-56.jar</system-err></testcase><testcase classname="CVE-2020-25633" name="pkg:maven/org.entando/entando-k8s-operator-common@0.0.0-SNAPSHOT-PR-60-56"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N)"/><system-out>A flaw was found in RESTEasy client in all versions of RESTEasy up to 4.5.6.Final. It may allow client users to obtain the server&apos;s potentially sensitive information when the server got WebApplicationException from the RESTEasy client call. The highest threat from this vulnerability is to data confidentiality.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-operator-common/0.0.0-SNAPSHOT-PR-60-56/entando-k8s-operator-common-0.0.0-SNAPSHOT-PR-60-56.jar</system-err></testcase><testcase classname="CVE-2020-25638" name="pkg:maven/org.entando/entando-k8s-operator-common@0.0.0-SNAPSHOT-PR-60-56"><failure message="cvssV3: HIGH, score: 7.4 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N)"/><system-out>A flaw was found in hibernate-core in versions prior to and including 5.4.23.Final. A SQL injection in the implementation of the JPA Criteria API can permit unsanitized literals when a literal is used in the SQL comments of the query. This flaw could allow an attacker to access unauthorized information or possibly conduct further attacks. The highest threat from this vulnerability is to data confidentiality and integrity.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-operator-common/0.0.0-SNAPSHOT-PR-60-56/entando-k8s-operator-common-0.0.0-SNAPSHOT-PR-60-56.jar</system-err></testcase><testcase classname="CVE-2020-25649" name="pkg:maven/org.entando/entando-k8s-operator-common@0.0.0-SNAPSHOT-PR-60-56"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:H/A:N)"/><system-out>A flaw was found in FasterXML Jackson Databind, where it did not have entity expansion secured properly. This flaw allows vulnerability to XML external entity (XXE) attacks. The highest threat from this vulnerability is data integrity.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-operator-common/0.0.0-SNAPSHOT-PR-60-56/entando-k8s-operator-common-0.0.0-SNAPSHOT-PR-60-56.jar</system-err></testcase><testcase classname="CVE-2020-25724" name="pkg:maven/org.entando/entando-k8s-operator-common@0.0.0-SNAPSHOT-PR-60-56"><failure message="cvssV3: MEDIUM, score: 4.3 (CVSS:3.1/AV:N/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N)"/><system-out>A flaw was found in RESTEasy, where an incorrect response to an HTTP request is provided. This flaw allows an attacker to gain access to privileged information. The highest threat from this vulnerability is to confidentiality and integrity. Versions before resteasy 2.0.0.Alpha3 are affected.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-operator-common/0.0.0-SNAPSHOT-PR-60-56/entando-k8s-operator-common-0.0.0-SNAPSHOT-PR-60-56.jar</system-err></testcase><testcase classname="CVE-2020-8908" name="pkg:maven/org.entando/entando-k8s-operator-common@0.0.0-SNAPSHOT-PR-60-56"><failure message="cvssV3: LOW, score: 3.3 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:L/I:N/A:N)"/><system-out>A temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime&apos;s java.io.tmpdir system property to point to a location whose permissions are appropriately configured.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-operator-common/0.0.0-SNAPSHOT-PR-60-56/entando-k8s-operator-common-0.0.0-SNAPSHOT-PR-60-56.jar</system-err></testcase><testcase classname="CVE-2021-20289" name="pkg:maven/org.entando/entando-k8s-operator-common@0.0.0-SNAPSHOT-PR-60-56"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N)"/><system-out>A flaw was found in RESTEasy in all versions of RESTEasy up to 4.6.0.Final. The endpoint class and method names are returned as part of the exception response when RESTEasy cannot convert one of the request URI path or query values to the matching JAX-RS resource method&apos;s parameter value. The highest threat from this vulnerability is to data confidentiality.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-operator-common/0.0.0-SNAPSHOT-PR-60-56/entando-k8s-operator-common-0.0.0-SNAPSHOT-PR-60-56.jar</system-err></testcase><testcase classname="CVE-2021-20328" name="pkg:maven/org.entando/entando-k8s-operator-common@0.0.0-SNAPSHOT-PR-60-56"><failure message="cvssV3: MEDIUM, score: 6.8 (CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N)"/><system-out>Specific versions of the Java driver that support client-side field level encryption (CSFLE) fail to perform correct host name verification on the KMS server’s certificate. This vulnerability in combination with a privileged network position active MITM attack could result in interception of traffic between the Java driver and the KMS service rendering Field Level Encryption ineffective. This issue was discovered during internal testing and affects all versions of the Java driver that support CSFLE. The Java async, Scala, and reactive streams drivers are not impacted. This vulnerability does not impact driver traffic payloads with CSFLE-supported key services originating from applications residing inside the AWS, GCP, and Azure network fabrics due to compensating controls in these environments. This issue does not impact driver workloads that don’t use Field Level Encryption.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-operator-common/0.0.0-SNAPSHOT-PR-60-56/entando-k8s-operator-common-0.0.0-SNAPSHOT-PR-60-56.jar</system-err></testcase><testcase classname="CVE-2021-21290" name="pkg:maven/org.entando/entando-k8s-operator-common@0.0.0-SNAPSHOT-PR-60-56"><failure message="cvssV3: MEDIUM, score: 5.5 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N)"/><system-out>Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty&apos;s multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method &quot;File.createTempFile&quot; on unix-like systems creates a random file, but, by default will create this file with the permissions &quot;-rw-r--r--&quot;. Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty&apos;s &quot;AbstractDiskHttpData&quot; is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own &quot;java.io.tmpdir&quot; when you start the JVM or use &quot;DefaultHttpDataFactory.setBaseDir(...)&quot; to set the directory to something that is only readable by the current user.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-operator-common/0.0.0-SNAPSHOT-PR-60-56/entando-k8s-operator-common-0.0.0-SNAPSHOT-PR-60-56.jar</system-err></testcase><testcase classname="CVE-2021-21295" name="pkg:maven/org.entando/entando-k8s-operator-common@0.0.0-SNAPSHOT-PR-60-56"><failure message="cvssV3: MEDIUM, score: 5.9 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N)"/><system-out>Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. In Netty (io.netty:netty-codec-http2) before version 4.1.60.Final there is a vulnerability that enables request smuggling. If a Content-Length header is present in the original HTTP/2 request, the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is fine as long as the request is not proxied through as HTTP/1.1. If the request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1 domain objects (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel&apos;s pipeline and proxied through a remote peer as HTTP/1.1 this may result in request smuggling. In a proxy case, users may assume the content-length is validated somehow, which is not the case. If the request is forwarded to a backend channel that is a HTTP/1.1 connection, the Content-Length now has meaning and needs to be checked. An attacker can smuggle requests inside the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example attack refer to the linked GitHub Advisory. Users are only affected if all of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects, and these HTTP/1.1 objects are forwarded to another remote peer. This has been patched in 4.1.60.Final As a workaround, the user can do the validation by themselves by implementing a custom `ChannelInboundHandler` that is put in the `ChannelPipeline` behind `Http2StreamFrameToHttpObjectCodec`.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/entando/entando-k8s-operator-common/0.0.0-SNAPSHOT-PR-60-56/entando-k8s-operator-common-0.0.0-SNAPSHOT-PR-60-56.jar</system-err></testcase></testsuite><testsuite failures="0" id="14" name="/home/jenkins/.mvnrepository/com/google/guava/failureaccess/1.0.1/failureaccess-1.0.1.jar" package="failureaccess-1.0.1.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="failureaccess-1.0.1.jar"/></testsuite><testsuite failures="0" id="15" name="/home/jenkins/.mvnrepository/com/github/mifmif/generex/1.0.2/generex-1.0.2.jar" package="generex-1.0.2.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="generex-1.0.2.jar"/></testsuite><testsuite failures="0" id="16" name="/home/jenkins/.mvnrepository/org/graalvm/sdk/graal-sdk/21.0.0/graal-sdk-21.0.0.jar" package="graal-sdk-21.0.0.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="graal-sdk-21.0.0.jar"/></testsuite><testsuite failures="0" id="17" name="/home/jenkins/.mvnrepository/com/google/guava/guava/30.1-jre/guava-30.1-jre.jar" package="guava-30.1-jre.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="guava-30.1-jre.jar"/></testsuite><testsuite failures="0" id="18" name="/home/jenkins/.mvnrepository/org/apache/httpcomponents/httpclient/4.5.13/httpclient-4.5.13.jar" package="httpclient-4.5.13.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="httpclient-4.5.13.jar"/></testsuite><testsuite failures="0" id="19" name="/home/jenkins/.mvnrepository/org/apache/httpcomponents/httpcore/4.4.14/httpcore-4.4.14.jar" package="httpcore-4.4.14.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="httpcore-4.4.14.jar"/></testsuite><testsuite failures="0" id="20" name="/home/jenkins/.mvnrepository/com/sun/istack/istack-commons-runtime/3.0.10/istack-commons-runtime-3.0.10.jar" package="istack-commons-runtime-3.0.10.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="istack-commons-runtime-3.0.10.jar"/></testsuite><testsuite failures="0" id="21" name="/home/jenkins/.mvnrepository/com/fasterxml/jackson/core/jackson-annotations/2.12.0/jackson-annotations-2.12.0.jar" package="jackson-annotations-2.12.0.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="jackson-annotations-2.12.0.jar"/></testsuite><testsuite failures="0" id="22" name="/home/jenkins/.mvnrepository/com/fasterxml/jackson/core/jackson-core/2.12.0/jackson-core-2.12.0.jar" package="jackson-core-2.12.0.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="jackson-core-2.12.0.jar"/></testsuite><testsuite failures="0" id="23" name="/home/jenkins/.mvnrepository/com/github/fge/jackson-coreutils/1.6/jackson-coreutils-1.6.jar" package="jackson-coreutils-1.6.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="jackson-coreutils-1.6.jar"/></testsuite><testsuite failures="0" id="24" name="/home/jenkins/.mvnrepository/com/fasterxml/jackson/core/jackson-databind/2.12.0/jackson-databind-2.12.0.jar" package="jackson-databind-2.12.0.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="jackson-databind-2.12.0.jar"/></testsuite><testsuite failures="0" id="25" name="/home/jenkins/.mvnrepository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.12.0/jackson-datatype-jdk8-2.12.0.jar" package="jackson-datatype-jdk8-2.12.0.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="jackson-datatype-jdk8-2.12.0.jar"/></testsuite><testsuite failures="0" id="26" name="/home/jenkins/.mvnrepository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.12.0/jackson-datatype-jsr310-2.12.0.jar" package="jackson-datatype-jsr310-2.12.0.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="jackson-datatype-jsr310-2.12.0.jar"/></testsuite><testsuite failures="0" id="27" name="/home/jenkins/.mvnrepository/com/fasterxml/jackson/jaxrs/jackson-jaxrs-base/2.12.0/jackson-jaxrs-base-2.12.0.jar" package="jackson-jaxrs-base-2.12.0.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="jackson-jaxrs-base-2.12.0.jar"/></testsuite><testsuite failures="0" id="28" name="/home/jenkins/.mvnrepository/com/fasterxml/jackson/jaxrs/jackson-jaxrs-json-provider/2.12.0/jackson-jaxrs-json-provider-2.12.0.jar" package="jackson-jaxrs-json-provider-2.12.0.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="jackson-jaxrs-json-provider-2.12.0.jar"/></testsuite><testsuite failures="0" id="29" name="/home/jenkins/.mvnrepository/com/fasterxml/jackson/module/jackson-module-jaxb-annotations/2.12.0/jackson-module-jaxb-annotations-2.12.0.jar" package="jackson-module-jaxb-annotations-2.12.0.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="jackson-module-jaxb-annotations-2.12.0.jar"/></testsuite><testsuite failures="0" id="30" name="/home/jenkins/.mvnrepository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.12.0/jackson-module-parameter-names-2.12.0.jar" package="jackson-module-parameter-names-2.12.0.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="jackson-module-parameter-names-2.12.0.jar"/></testsuite><testsuite failures="0" id="31" name="/home/jenkins/.mvnrepository/com/sun/activation/jakarta.activation/1.2.1/jakarta.activation-1.2.1.jar" package="jakarta.activation-1.2.1.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="jakarta.activation-1.2.1.jar"/></testsuite><testsuite failures="0" id="32" name="/home/jenkins/.mvnrepository/jakarta/activation/jakarta.activation-api/1.2.1/jakarta.activation-api-1.2.1.jar" package="jakarta.activation-api-1.2.1.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="jakarta.activation-api-1.2.1.jar"/></testsuite><testsuite failures="0" id="33" name="/home/jenkins/.mvnrepository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar" package="jakarta.annotation-api-1.3.5.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="jakarta.annotation-api-1.3.5.jar"/></testsuite><testsuite failures="0" id="34" name="/home/jenkins/.mvnrepository/jakarta/el/jakarta.el-api/3.0.3/jakarta.el-api-3.0.3.jar" package="jakarta.el-api-3.0.3.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="jakarta.el-api-3.0.3.jar"/></testsuite><testsuite failures="0" id="35" name="/home/jenkins/.mvnrepository/jakarta/enterprise/jakarta.enterprise.cdi-api/2.0.2/jakarta.enterprise.cdi-api-2.0.2.jar" package="jakarta.enterprise.cdi-api-2.0.2.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="jakarta.enterprise.cdi-api-2.0.2.jar"/></testsuite><testsuite failures="0" id="36" name="/home/jenkins/.mvnrepository/jakarta/inject/jakarta.inject-api/1.0/jakarta.inject-api-1.0.jar" package="jakarta.inject-api-1.0.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="jakarta.inject-api-1.0.jar"/></testsuite><testsuite failures="0" id="37" name="/home/jenkins/.mvnrepository/jakarta/interceptor/jakarta.interceptor-api/1.2.5/jakarta.interceptor-api-1.2.5.jar" package="jakarta.interceptor-api-1.2.5.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="jakarta.interceptor-api-1.2.5.jar"/></testsuite><testsuite failures="0" id="38" name="/home/jenkins/.mvnrepository/com/sun/mail/jakarta.mail/1.6.5/jakarta.mail-1.6.5.jar" package="jakarta.mail-1.6.5.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="jakarta.mail-1.6.5.jar"/></testsuite><testsuite failures="0" id="39" name="/home/jenkins/.mvnrepository/jakarta/transaction/jakarta.transaction-api/1.3.3/jakarta.transaction-api-1.3.3.jar" package="jakarta.transaction-api-1.3.3.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="jakarta.transaction-api-1.3.3.jar"/></testsuite><testsuite failures="0" id="40" name="/home/jenkins/.mvnrepository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar" package="jakarta.validation-api-2.0.2.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="jakarta.validation-api-2.0.2.jar"/></testsuite><testsuite failures="0" id="41" name="/home/jenkins/.mvnrepository/javax/servlet/javax.servlet-api/3.0.1/javax.servlet-api-3.0.1.jar" package="javax.servlet-api-3.0.1.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="javax.servlet-api-3.0.1.jar"/></testsuite><testsuite failures="0" id="42" name="/home/jenkins/.mvnrepository/org/glassfish/jaxb/jaxb-runtime/2.3.3-b02/jaxb-runtime-2.3.3-b02.jar" package="jaxb-runtime-2.3.3-b02.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="jaxb-runtime-2.3.3-b02.jar"/></testsuite><testsuite failures="0" id="43" name="/home/jenkins/.mvnrepository/javax/xml/parsers/jaxp-api/1.4/jaxp-api-1.4.jar" package="jaxp-api-1.4.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="jaxp-api-1.4.jar"/></testsuite><testsuite failures="0" id="44" name="/home/jenkins/.mvnrepository/com/sun/org/apache/jaxp-ri/1.4/jaxp-ri-1.4.jar" package="jaxp-ri-1.4.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="jaxp-ri-1.4.jar"/></testsuite><testsuite failures="0" id="45" name="/home/jenkins/.mvnrepository/org/jboss/spec/javax/xml/bind/jboss-jaxb-api_2.3_spec/2.0.0.Final/jboss-jaxb-api_2.3_spec-2.0.0.Final.jar" package="jboss-jaxb-api_2.3_spec-2.0.0.Final.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="jboss-jaxb-api_2.3_spec-2.0.0.Final.jar"/></testsuite><testsuite failures="0" id="46" name="/home/jenkins/.mvnrepository/org/jboss/spec/javax/ws/rs/jboss-jaxrs-api_2.1_spec/2.0.1.Final/jboss-jaxrs-api_2.1_spec-2.0.1.Final.jar" package="jboss-jaxrs-api_2.1_spec-2.0.1.Final.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="jboss-jaxrs-api_2.1_spec-2.0.1.Final.jar"/></testsuite><testsuite failures="0" id="47" name="/home/jenkins/.mvnrepository/org/jboss/logging/jboss-logging/3.4.1.Final/jboss-logging-3.4.1.Final.jar" package="jboss-logging-3.4.1.Final.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="jboss-logging-3.4.1.Final.jar"/></testsuite><testsuite failures="0" id="48" name="/home/jenkins/.mvnrepository/org/jboss/logging/jboss-logging-annotations/2.2.0.Final/jboss-logging-annotations-2.2.0.Final.jar" package="jboss-logging-annotations-2.2.0.Final.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="jboss-logging-annotations-2.2.0.Final.jar"/></testsuite><testsuite failures="0" id="49" name="/home/jenkins/.mvnrepository/org/jboss/logmanager/jboss-logmanager-embedded/1.0.9/jboss-logmanager-embedded-1.0.9.jar" package="jboss-logmanager-embedded-1.0.9.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="jboss-logmanager-embedded-1.0.9.jar"/></testsuite><testsuite failures="0" id="50" name="/home/jenkins/.mvnrepository/org/jboss/threads/jboss-threads/3.2.0.Final/jboss-threads-3.2.0.Final.jar" package="jboss-threads-3.2.0.Final.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="jboss-threads-3.2.0.Final.jar"/></testsuite><testsuite failures="0" id="51" name="/home/jenkins/.mvnrepository/com/github/stephenc/jcip/jcip-annotations/1.0-1/jcip-annotations-1.0-1.jar" package="jcip-annotations-1.0-1.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="jcip-annotations-1.0-1.jar"/></testsuite><testsuite failures="0" id="52" name="/home/jenkins/.mvnrepository/com/github/fge/json-patch/1.9/json-patch-1.9.jar" package="json-patch-1.9.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="json-patch-1.9.jar"/></testsuite><testsuite failures="2" id="53" name="/home/jenkins/.mvnrepository/org/keycloak/keycloak-admin-client/9.0.3/keycloak-admin-client-9.0.3.jar" package="keycloak-admin-client-9.0.3.jar" skipped="15" tests="17" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2020-27826" name="pkg:maven/org.keycloak/keycloak-admin-client@9.0.3"><failure message="cvssV3: MEDIUM, score: 4.2 (CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:N)"/><system-out>A flaw was found in Keycloak before version 12.0.0 where it is possible to update the user&apos;s metadata attributes using Account REST API. This flaw allows an attacker to change its own NameID attribute to impersonate the admin user for any particular application.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-admin-client/9.0.3/keycloak-admin-client-9.0.3.jar</system-err></testcase><testcase classname="CVE-2021-20195" name="pkg:maven/org.keycloak/keycloak-admin-client@9.0.3"><failure message="cvssV3: CRITICAL, score: 9.6 (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H)"/><system-out>A flaw was found in keycloak in versions before 13.0.0. A Self Stored XSS attack vector escalating to a complete account takeover is possible due to user-supplied data fields not being properly encoded and Javascript code being used to process the data. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-admin-client/9.0.3/keycloak-admin-client-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-27838" name="pkg:maven/org.keycloak/keycloak-admin-client@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A flaw was found in keycloak in versions prior to 13.0.0. The client registration endpoint allows fetching information about PUBLIC clients (like client secret) without authentication which could be an issue if the same PUBLIC client changed to CONFIDENTIAL later. The highest threat from this vulnerability is to data confidentiality.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-admin-client/9.0.3/keycloak-admin-client-9.0.3.jar</system-err></testcase><testcase classname="CVE-2021-20202" name="pkg:maven/org.keycloak/keycloak-admin-client@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A flaw was found in keycloak. Directories can be created prior to the Java process creating them in the temporary directory, but with wider user permissions, allowing the attacker to have access to the contents that keycloak stores in this directory. The highest threat from this vulnerability is to data confidentiality and integrity.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-admin-client/9.0.3/keycloak-admin-client-9.0.3.jar</system-err></testcase><testcase classname="CVE-2021-20222" name="pkg:maven/org.keycloak/keycloak-admin-client@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A flaw was found in keycloak. The new account console in keycloak can allow malicious code to be executed using the referrer URL. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-admin-client/9.0.3/keycloak-admin-client-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-10758" name="pkg:maven/org.keycloak/keycloak-admin-client@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A vulnerability was found in Keycloak before 11.0.1 where DoS attack is possible by sending twenty requests simultaneously to the specified keycloak server, all with a Content-Length header value that exceeds the actual byte count of the request body.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-admin-client/9.0.3/keycloak-admin-client-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-1728" name="pkg:maven/org.keycloak/keycloak-admin-client@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A vulnerability was found in all versions of Keycloak where, the pages on the Admin Console area of the application are completely missing general HTTP security headers in HTTP-responses. This does not directly lead to a security issue, yet it might aid attackers in their efforts to exploit other problems. The flaws unnecessarily make the servers more prone to Clickjacking, channel downgrade attacks and other similar client-based attack vectors.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-admin-client/9.0.3/keycloak-admin-client-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-14359" name="pkg:maven/org.keycloak/keycloak-admin-client@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A vulnerability was found in all versions of keycloak, where on using lower case HTTP headers (via cURL) we can bypass our Gatekeeper. Lower case headers are also accepted by some webservers (e.g. Jetty). This means there is no protection when we put a Gatekeeper in front of a Jetty server and use lowercase headers.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-admin-client/9.0.3/keycloak-admin-client-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-10776" name="pkg:maven/org.keycloak/keycloak-admin-client@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A flaw was found in Keycloak before version 12.0.0, where it is possible to add unsafe schemes for the redirect_uri parameter. This flaw allows an attacker to perform a Cross-site scripting attack.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-admin-client/9.0.3/keycloak-admin-client-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-1714" name="pkg:maven/org.keycloak/keycloak-admin-client@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A flaw was found in Keycloak before version 11.0.0, where the code base contains usages of ObjectInputStream without type checks. This flaw allows an attacker to inject arbitrarily serialized Java Objects, which would then get deserialized in a privileged context and potentially lead to remote code execution.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-admin-client/9.0.3/keycloak-admin-client-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-1725" name="pkg:maven/org.keycloak/keycloak-admin-client@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A flaw was found in keycloak before version 13.0.0. In some scenarios a user still has access to a resource after changing the role mappings in Keycloak and after expiration of the previous access token.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-admin-client/9.0.3/keycloak-admin-client-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-1758" name="pkg:maven/org.keycloak/keycloak-admin-client@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A flaw was found in Keycloak in versions before 10.0.0, where it does not perform the TLS hostname verification while sending emails using the SMTP server. This flaw allows an attacker to perform a man-in-the-middle (MITM) attack.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-admin-client/9.0.3/keycloak-admin-client-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-14366" name="pkg:maven/org.keycloak/keycloak-admin-client@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A vulnerability was found in keycloak, where path traversal using URL-encoded path segments in the request is possible because the resources endpoint applies a transformation of the url path to the file path. Only few specific folder hierarchies can be exposed by this flaw</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-admin-client/9.0.3/keycloak-admin-client-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-14389" name="pkg:maven/org.keycloak/keycloak-admin-client@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>It was found that Keycloak before version 12.0.0 would permit a user with only view-profile role to manage the resources in the new account console, allowing access and modification of data the user was not intended to have.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-admin-client/9.0.3/keycloak-admin-client-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-14302" name="pkg:maven/org.keycloak/keycloak-admin-client@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A flaw was found in Keycloak before 13.0.0 where an external identity provider, after successful authentication, redirects to a Keycloak endpoint that accepts multiple invocations with the use of the same &quot;state&quot; parameter. This flaw allows a malicious user to perform replay attacks.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-admin-client/9.0.3/keycloak-admin-client-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-10770" name="pkg:maven/org.keycloak/keycloak-admin-client@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A flaw was found in Keycloak before 13.0.0, where it is possible to force the server to call out an unverified URL using the OIDC parameter request_uri. This flaw allows an attacker to use this parameter to execute a Server-side request forgery (SSRF) attack.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-admin-client/9.0.3/keycloak-admin-client-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-1694" name="pkg:maven/org.keycloak/keycloak-admin-client@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A flaw was found in all versions of Keycloak before 10.0.0, where the NodeJS adapter did not support the verify-token-audience. This flaw results in some users having access to sensitive information outside of their permissions.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-admin-client/9.0.3/keycloak-admin-client-9.0.3.jar</system-err></testcase></testsuite><testsuite failures="2" id="54" name="/home/jenkins/.mvnrepository/org/keycloak/keycloak-common/9.0.3/keycloak-common-9.0.3.jar" package="keycloak-common-9.0.3.jar" skipped="15" tests="17" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2020-27826" name="pkg:maven/org.keycloak/keycloak-common@9.0.3"><failure message="cvssV3: MEDIUM, score: 4.2 (CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:N)"/><system-out>A flaw was found in Keycloak before version 12.0.0 where it is possible to update the user&apos;s metadata attributes using Account REST API. This flaw allows an attacker to change its own NameID attribute to impersonate the admin user for any particular application.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-common/9.0.3/keycloak-common-9.0.3.jar</system-err></testcase><testcase classname="CVE-2021-20195" name="pkg:maven/org.keycloak/keycloak-common@9.0.3"><failure message="cvssV3: CRITICAL, score: 9.6 (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H)"/><system-out>A flaw was found in keycloak in versions before 13.0.0. A Self Stored XSS attack vector escalating to a complete account takeover is possible due to user-supplied data fields not being properly encoded and Javascript code being used to process the data. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-common/9.0.3/keycloak-common-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-27838" name="pkg:maven/org.keycloak/keycloak-common@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A flaw was found in keycloak in versions prior to 13.0.0. The client registration endpoint allows fetching information about PUBLIC clients (like client secret) without authentication which could be an issue if the same PUBLIC client changed to CONFIDENTIAL later. The highest threat from this vulnerability is to data confidentiality.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-common/9.0.3/keycloak-common-9.0.3.jar</system-err></testcase><testcase classname="CVE-2021-20202" name="pkg:maven/org.keycloak/keycloak-common@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A flaw was found in keycloak. Directories can be created prior to the Java process creating them in the temporary directory, but with wider user permissions, allowing the attacker to have access to the contents that keycloak stores in this directory. The highest threat from this vulnerability is to data confidentiality and integrity.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-common/9.0.3/keycloak-common-9.0.3.jar</system-err></testcase><testcase classname="CVE-2021-20222" name="pkg:maven/org.keycloak/keycloak-common@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A flaw was found in keycloak. The new account console in keycloak can allow malicious code to be executed using the referrer URL. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-common/9.0.3/keycloak-common-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-10758" name="pkg:maven/org.keycloak/keycloak-common@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A vulnerability was found in Keycloak before 11.0.1 where DoS attack is possible by sending twenty requests simultaneously to the specified keycloak server, all with a Content-Length header value that exceeds the actual byte count of the request body.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-common/9.0.3/keycloak-common-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-1728" name="pkg:maven/org.keycloak/keycloak-common@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A vulnerability was found in all versions of Keycloak where, the pages on the Admin Console area of the application are completely missing general HTTP security headers in HTTP-responses. This does not directly lead to a security issue, yet it might aid attackers in their efforts to exploit other problems. The flaws unnecessarily make the servers more prone to Clickjacking, channel downgrade attacks and other similar client-based attack vectors.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-common/9.0.3/keycloak-common-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-14359" name="pkg:maven/org.keycloak/keycloak-common@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A vulnerability was found in all versions of keycloak, where on using lower case HTTP headers (via cURL) we can bypass our Gatekeeper. Lower case headers are also accepted by some webservers (e.g. Jetty). This means there is no protection when we put a Gatekeeper in front of a Jetty server and use lowercase headers.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-common/9.0.3/keycloak-common-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-10776" name="pkg:maven/org.keycloak/keycloak-common@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A flaw was found in Keycloak before version 12.0.0, where it is possible to add unsafe schemes for the redirect_uri parameter. This flaw allows an attacker to perform a Cross-site scripting attack.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-common/9.0.3/keycloak-common-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-1714" name="pkg:maven/org.keycloak/keycloak-common@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A flaw was found in Keycloak before version 11.0.0, where the code base contains usages of ObjectInputStream without type checks. This flaw allows an attacker to inject arbitrarily serialized Java Objects, which would then get deserialized in a privileged context and potentially lead to remote code execution.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-common/9.0.3/keycloak-common-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-1725" name="pkg:maven/org.keycloak/keycloak-common@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A flaw was found in keycloak before version 13.0.0. In some scenarios a user still has access to a resource after changing the role mappings in Keycloak and after expiration of the previous access token.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-common/9.0.3/keycloak-common-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-1758" name="pkg:maven/org.keycloak/keycloak-common@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A flaw was found in Keycloak in versions before 10.0.0, where it does not perform the TLS hostname verification while sending emails using the SMTP server. This flaw allows an attacker to perform a man-in-the-middle (MITM) attack.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-common/9.0.3/keycloak-common-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-14366" name="pkg:maven/org.keycloak/keycloak-common@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A vulnerability was found in keycloak, where path traversal using URL-encoded path segments in the request is possible because the resources endpoint applies a transformation of the url path to the file path. Only few specific folder hierarchies can be exposed by this flaw</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-common/9.0.3/keycloak-common-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-14389" name="pkg:maven/org.keycloak/keycloak-common@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>It was found that Keycloak before version 12.0.0 would permit a user with only view-profile role to manage the resources in the new account console, allowing access and modification of data the user was not intended to have.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-common/9.0.3/keycloak-common-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-14302" name="pkg:maven/org.keycloak/keycloak-common@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A flaw was found in Keycloak before 13.0.0 where an external identity provider, after successful authentication, redirects to a Keycloak endpoint that accepts multiple invocations with the use of the same &quot;state&quot; parameter. This flaw allows a malicious user to perform replay attacks.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-common/9.0.3/keycloak-common-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-10770" name="pkg:maven/org.keycloak/keycloak-common@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A flaw was found in Keycloak before 13.0.0, where it is possible to force the server to call out an unverified URL using the OIDC parameter request_uri. This flaw allows an attacker to use this parameter to execute a Server-side request forgery (SSRF) attack.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-common/9.0.3/keycloak-common-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-1694" name="pkg:maven/org.keycloak/keycloak-common@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A flaw was found in all versions of Keycloak before 10.0.0, where the NodeJS adapter did not support the verify-token-audience. This flaw results in some users having access to sensitive information outside of their permissions.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-common/9.0.3/keycloak-common-9.0.3.jar</system-err></testcase></testsuite><testsuite failures="2" id="55" name="/home/jenkins/.mvnrepository/org/keycloak/keycloak-core/9.0.3/keycloak-core-9.0.3.jar" package="keycloak-core-9.0.3.jar" skipped="15" tests="17" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2020-27826" name="pkg:maven/org.keycloak/keycloak-core@9.0.3"><failure message="cvssV3: MEDIUM, score: 4.2 (CVSS:3.1/AV:N/AC:H/PR:L/UI:N/S:U/C:L/I:L/A:N)"/><system-out>A flaw was found in Keycloak before version 12.0.0 where it is possible to update the user&apos;s metadata attributes using Account REST API. This flaw allows an attacker to change its own NameID attribute to impersonate the admin user for any particular application.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-core/9.0.3/keycloak-core-9.0.3.jar</system-err></testcase><testcase classname="CVE-2021-20195" name="pkg:maven/org.keycloak/keycloak-core@9.0.3"><failure message="cvssV3: CRITICAL, score: 9.6 (CVSS:3.1/AV:N/AC:L/PR:N/UI:R/S:C/C:H/I:H/A:H)"/><system-out>A flaw was found in keycloak in versions before 13.0.0. A Self Stored XSS attack vector escalating to a complete account takeover is possible due to user-supplied data fields not being properly encoded and Javascript code being used to process the data. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-core/9.0.3/keycloak-core-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-27838" name="pkg:maven/org.keycloak/keycloak-core@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A flaw was found in keycloak in versions prior to 13.0.0. The client registration endpoint allows fetching information about PUBLIC clients (like client secret) without authentication which could be an issue if the same PUBLIC client changed to CONFIDENTIAL later. The highest threat from this vulnerability is to data confidentiality.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-core/9.0.3/keycloak-core-9.0.3.jar</system-err></testcase><testcase classname="CVE-2021-20202" name="pkg:maven/org.keycloak/keycloak-core@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A flaw was found in keycloak. Directories can be created prior to the Java process creating them in the temporary directory, but with wider user permissions, allowing the attacker to have access to the contents that keycloak stores in this directory. The highest threat from this vulnerability is to data confidentiality and integrity.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-core/9.0.3/keycloak-core-9.0.3.jar</system-err></testcase><testcase classname="CVE-2021-20222" name="pkg:maven/org.keycloak/keycloak-core@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A flaw was found in keycloak. The new account console in keycloak can allow malicious code to be executed using the referrer URL. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-core/9.0.3/keycloak-core-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-10758" name="pkg:maven/org.keycloak/keycloak-core@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A vulnerability was found in Keycloak before 11.0.1 where DoS attack is possible by sending twenty requests simultaneously to the specified keycloak server, all with a Content-Length header value that exceeds the actual byte count of the request body.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-core/9.0.3/keycloak-core-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-1728" name="pkg:maven/org.keycloak/keycloak-core@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A vulnerability was found in all versions of Keycloak where, the pages on the Admin Console area of the application are completely missing general HTTP security headers in HTTP-responses. This does not directly lead to a security issue, yet it might aid attackers in their efforts to exploit other problems. The flaws unnecessarily make the servers more prone to Clickjacking, channel downgrade attacks and other similar client-based attack vectors.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-core/9.0.3/keycloak-core-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-14359" name="pkg:maven/org.keycloak/keycloak-core@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A vulnerability was found in all versions of keycloak, where on using lower case HTTP headers (via cURL) we can bypass our Gatekeeper. Lower case headers are also accepted by some webservers (e.g. Jetty). This means there is no protection when we put a Gatekeeper in front of a Jetty server and use lowercase headers.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-core/9.0.3/keycloak-core-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-10776" name="pkg:maven/org.keycloak/keycloak-core@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A flaw was found in Keycloak before version 12.0.0, where it is possible to add unsafe schemes for the redirect_uri parameter. This flaw allows an attacker to perform a Cross-site scripting attack.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-core/9.0.3/keycloak-core-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-1714" name="pkg:maven/org.keycloak/keycloak-core@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A flaw was found in Keycloak before version 11.0.0, where the code base contains usages of ObjectInputStream without type checks. This flaw allows an attacker to inject arbitrarily serialized Java Objects, which would then get deserialized in a privileged context and potentially lead to remote code execution.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-core/9.0.3/keycloak-core-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-1725" name="pkg:maven/org.keycloak/keycloak-core@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A flaw was found in keycloak before version 13.0.0. In some scenarios a user still has access to a resource after changing the role mappings in Keycloak and after expiration of the previous access token.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-core/9.0.3/keycloak-core-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-1758" name="pkg:maven/org.keycloak/keycloak-core@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A flaw was found in Keycloak in versions before 10.0.0, where it does not perform the TLS hostname verification while sending emails using the SMTP server. This flaw allows an attacker to perform a man-in-the-middle (MITM) attack.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-core/9.0.3/keycloak-core-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-14366" name="pkg:maven/org.keycloak/keycloak-core@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A vulnerability was found in keycloak, where path traversal using URL-encoded path segments in the request is possible because the resources endpoint applies a transformation of the url path to the file path. Only few specific folder hierarchies can be exposed by this flaw</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-core/9.0.3/keycloak-core-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-14389" name="pkg:maven/org.keycloak/keycloak-core@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>It was found that Keycloak before version 12.0.0 would permit a user with only view-profile role to manage the resources in the new account console, allowing access and modification of data the user was not intended to have.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-core/9.0.3/keycloak-core-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-14302" name="pkg:maven/org.keycloak/keycloak-core@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A flaw was found in Keycloak before 13.0.0 where an external identity provider, after successful authentication, redirects to a Keycloak endpoint that accepts multiple invocations with the use of the same &quot;state&quot; parameter. This flaw allows a malicious user to perform replay attacks.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-core/9.0.3/keycloak-core-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-10770" name="pkg:maven/org.keycloak/keycloak-core@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A flaw was found in Keycloak before 13.0.0, where it is possible to force the server to call out an unverified URL using the OIDC parameter request_uri. This flaw allows an attacker to use this parameter to execute a Server-side request forgery (SSRF) attack.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-core/9.0.3/keycloak-core-9.0.3.jar</system-err></testcase><testcase classname="CVE-2020-1694" name="pkg:maven/org.keycloak/keycloak-core@9.0.3"><skipped message="These are generally serverside vulnerabilities. The entando-k8s containers that use Keycloak run as
        background processes that do not expose services. We also do not have a version of Keycloak to upgrade to
        beyond 9.0.3 because this is the official version used in Red Hat SSO" /><system-out>A flaw was found in all versions of Keycloak before 10.0.0, where the NodeJS adapter did not support the verify-token-audience. This flaw results in some users having access to sensitive information outside of their permissions.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/keycloak/keycloak-core/9.0.3/keycloak-core-9.0.3.jar</system-err></testcase></testsuite><testsuite failures="0" id="56" name="/home/jenkins/.mvnrepository/io/fabric8/kubernetes-client/5.3.0/kubernetes-client-5.3.0.jar" package="kubernetes-client-5.3.0.jar" skipped="2" tests="2" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2020-8554" name="pkg:maven/io.fabric8/kubernetes-client@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes API server in all versions allow an attacker who is able to create a ClusterIP service and set the spec.externalIPs field, to intercept traffic to that IP address. Additionally, an attacker who is able to patch the status (which is considered a privileged operation and should not typically be granted to users) of a LoadBalancer service can set the status.loadBalancer.ingress.ip to similar effect.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-client/5.3.0/kubernetes-client-5.3.0.jar</system-err></testcase><testcase classname="CVE-2020-8570" name="pkg:maven/io.fabric8/kubernetes-client@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes Java client libraries in version 10.0.0 and versions prior to 9.0.1 allow writes to paths outside of the current directory when copying multiple files from a remote pod which sends a maliciously crafted archive. This can potentially overwrite any files on the system of the process executing the client code.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-client/5.3.0/kubernetes-client-5.3.0.jar</system-err></testcase></testsuite><testsuite failures="0" id="57" name="/home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-admissionregistration/5.3.0/kubernetes-model-admissionregistration-5.3.0.jar" package="kubernetes-model-admissionregistration-5.3.0.jar" skipped="2" tests="2" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2020-8554" name="pkg:maven/io.fabric8/kubernetes-model-admissionregistration@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes API server in all versions allow an attacker who is able to create a ClusterIP service and set the spec.externalIPs field, to intercept traffic to that IP address. Additionally, an attacker who is able to patch the status (which is considered a privileged operation and should not typically be granted to users) of a LoadBalancer service can set the status.loadBalancer.ingress.ip to similar effect.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-admissionregistration/5.3.0/kubernetes-model-admissionregistration-5.3.0.jar</system-err></testcase><testcase classname="CVE-2020-8570" name="pkg:maven/io.fabric8/kubernetes-model-admissionregistration@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes Java client libraries in version 10.0.0 and versions prior to 9.0.1 allow writes to paths outside of the current directory when copying multiple files from a remote pod which sends a maliciously crafted archive. This can potentially overwrite any files on the system of the process executing the client code.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-admissionregistration/5.3.0/kubernetes-model-admissionregistration-5.3.0.jar</system-err></testcase></testsuite><testsuite failures="0" id="58" name="/home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-apiextensions/5.3.0/kubernetes-model-apiextensions-5.3.0.jar" package="kubernetes-model-apiextensions-5.3.0.jar" skipped="2" tests="2" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2020-8554" name="pkg:maven/io.fabric8/kubernetes-model-apiextensions@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes API server in all versions allow an attacker who is able to create a ClusterIP service and set the spec.externalIPs field, to intercept traffic to that IP address. Additionally, an attacker who is able to patch the status (which is considered a privileged operation and should not typically be granted to users) of a LoadBalancer service can set the status.loadBalancer.ingress.ip to similar effect.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-apiextensions/5.3.0/kubernetes-model-apiextensions-5.3.0.jar</system-err></testcase><testcase classname="CVE-2020-8570" name="pkg:maven/io.fabric8/kubernetes-model-apiextensions@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes Java client libraries in version 10.0.0 and versions prior to 9.0.1 allow writes to paths outside of the current directory when copying multiple files from a remote pod which sends a maliciously crafted archive. This can potentially overwrite any files on the system of the process executing the client code.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-apiextensions/5.3.0/kubernetes-model-apiextensions-5.3.0.jar</system-err></testcase></testsuite><testsuite failures="0" id="59" name="/home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-apps/5.3.0/kubernetes-model-apps-5.3.0.jar" package="kubernetes-model-apps-5.3.0.jar" skipped="2" tests="2" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2020-8554" name="pkg:maven/io.fabric8/kubernetes-model-apps@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes API server in all versions allow an attacker who is able to create a ClusterIP service and set the spec.externalIPs field, to intercept traffic to that IP address. Additionally, an attacker who is able to patch the status (which is considered a privileged operation and should not typically be granted to users) of a LoadBalancer service can set the status.loadBalancer.ingress.ip to similar effect.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-apps/5.3.0/kubernetes-model-apps-5.3.0.jar</system-err></testcase><testcase classname="CVE-2020-8570" name="pkg:maven/io.fabric8/kubernetes-model-apps@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes Java client libraries in version 10.0.0 and versions prior to 9.0.1 allow writes to paths outside of the current directory when copying multiple files from a remote pod which sends a maliciously crafted archive. This can potentially overwrite any files on the system of the process executing the client code.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-apps/5.3.0/kubernetes-model-apps-5.3.0.jar</system-err></testcase></testsuite><testsuite failures="0" id="60" name="/home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-autoscaling/5.3.0/kubernetes-model-autoscaling-5.3.0.jar" package="kubernetes-model-autoscaling-5.3.0.jar" skipped="2" tests="2" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2020-8554" name="pkg:maven/io.fabric8/kubernetes-model-autoscaling@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes API server in all versions allow an attacker who is able to create a ClusterIP service and set the spec.externalIPs field, to intercept traffic to that IP address. Additionally, an attacker who is able to patch the status (which is considered a privileged operation and should not typically be granted to users) of a LoadBalancer service can set the status.loadBalancer.ingress.ip to similar effect.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-autoscaling/5.3.0/kubernetes-model-autoscaling-5.3.0.jar</system-err></testcase><testcase classname="CVE-2020-8570" name="pkg:maven/io.fabric8/kubernetes-model-autoscaling@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes Java client libraries in version 10.0.0 and versions prior to 9.0.1 allow writes to paths outside of the current directory when copying multiple files from a remote pod which sends a maliciously crafted archive. This can potentially overwrite any files on the system of the process executing the client code.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-autoscaling/5.3.0/kubernetes-model-autoscaling-5.3.0.jar</system-err></testcase></testsuite><testsuite failures="0" id="61" name="/home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-batch/5.3.0/kubernetes-model-batch-5.3.0.jar" package="kubernetes-model-batch-5.3.0.jar" skipped="2" tests="2" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2020-8554" name="pkg:maven/io.fabric8/kubernetes-model-batch@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes API server in all versions allow an attacker who is able to create a ClusterIP service and set the spec.externalIPs field, to intercept traffic to that IP address. Additionally, an attacker who is able to patch the status (which is considered a privileged operation and should not typically be granted to users) of a LoadBalancer service can set the status.loadBalancer.ingress.ip to similar effect.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-batch/5.3.0/kubernetes-model-batch-5.3.0.jar</system-err></testcase><testcase classname="CVE-2020-8570" name="pkg:maven/io.fabric8/kubernetes-model-batch@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes Java client libraries in version 10.0.0 and versions prior to 9.0.1 allow writes to paths outside of the current directory when copying multiple files from a remote pod which sends a maliciously crafted archive. This can potentially overwrite any files on the system of the process executing the client code.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-batch/5.3.0/kubernetes-model-batch-5.3.0.jar</system-err></testcase></testsuite><testsuite failures="0" id="62" name="/home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-certificates/5.3.0/kubernetes-model-certificates-5.3.0.jar" package="kubernetes-model-certificates-5.3.0.jar" skipped="2" tests="2" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2020-8554" name="pkg:maven/io.fabric8/kubernetes-model-certificates@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes API server in all versions allow an attacker who is able to create a ClusterIP service and set the spec.externalIPs field, to intercept traffic to that IP address. Additionally, an attacker who is able to patch the status (which is considered a privileged operation and should not typically be granted to users) of a LoadBalancer service can set the status.loadBalancer.ingress.ip to similar effect.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-certificates/5.3.0/kubernetes-model-certificates-5.3.0.jar</system-err></testcase><testcase classname="CVE-2020-8570" name="pkg:maven/io.fabric8/kubernetes-model-certificates@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes Java client libraries in version 10.0.0 and versions prior to 9.0.1 allow writes to paths outside of the current directory when copying multiple files from a remote pod which sends a maliciously crafted archive. This can potentially overwrite any files on the system of the process executing the client code.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-certificates/5.3.0/kubernetes-model-certificates-5.3.0.jar</system-err></testcase></testsuite><testsuite failures="0" id="63" name="/home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-common/5.3.0/kubernetes-model-common-5.3.0.jar" package="kubernetes-model-common-5.3.0.jar" skipped="2" tests="2" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2020-8554" name="pkg:maven/io.fabric8/kubernetes-model-common@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes API server in all versions allow an attacker who is able to create a ClusterIP service and set the spec.externalIPs field, to intercept traffic to that IP address. Additionally, an attacker who is able to patch the status (which is considered a privileged operation and should not typically be granted to users) of a LoadBalancer service can set the status.loadBalancer.ingress.ip to similar effect.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-common/5.3.0/kubernetes-model-common-5.3.0.jar</system-err></testcase><testcase classname="CVE-2020-8570" name="pkg:maven/io.fabric8/kubernetes-model-common@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes Java client libraries in version 10.0.0 and versions prior to 9.0.1 allow writes to paths outside of the current directory when copying multiple files from a remote pod which sends a maliciously crafted archive. This can potentially overwrite any files on the system of the process executing the client code.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-common/5.3.0/kubernetes-model-common-5.3.0.jar</system-err></testcase></testsuite><testsuite failures="0" id="64" name="/home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-coordination/5.3.0/kubernetes-model-coordination-5.3.0.jar" package="kubernetes-model-coordination-5.3.0.jar" skipped="2" tests="2" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2020-8554" name="pkg:maven/io.fabric8/kubernetes-model-coordination@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes API server in all versions allow an attacker who is able to create a ClusterIP service and set the spec.externalIPs field, to intercept traffic to that IP address. Additionally, an attacker who is able to patch the status (which is considered a privileged operation and should not typically be granted to users) of a LoadBalancer service can set the status.loadBalancer.ingress.ip to similar effect.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-coordination/5.3.0/kubernetes-model-coordination-5.3.0.jar</system-err></testcase><testcase classname="CVE-2020-8570" name="pkg:maven/io.fabric8/kubernetes-model-coordination@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes Java client libraries in version 10.0.0 and versions prior to 9.0.1 allow writes to paths outside of the current directory when copying multiple files from a remote pod which sends a maliciously crafted archive. This can potentially overwrite any files on the system of the process executing the client code.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-coordination/5.3.0/kubernetes-model-coordination-5.3.0.jar</system-err></testcase></testsuite><testsuite failures="0" id="65" name="/home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-core/5.3.0/kubernetes-model-core-5.3.0.jar" package="kubernetes-model-core-5.3.0.jar" skipped="2" tests="2" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2020-8554" name="pkg:maven/io.fabric8/kubernetes-model-core@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes API server in all versions allow an attacker who is able to create a ClusterIP service and set the spec.externalIPs field, to intercept traffic to that IP address. Additionally, an attacker who is able to patch the status (which is considered a privileged operation and should not typically be granted to users) of a LoadBalancer service can set the status.loadBalancer.ingress.ip to similar effect.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-core/5.3.0/kubernetes-model-core-5.3.0.jar</system-err></testcase><testcase classname="CVE-2020-8570" name="pkg:maven/io.fabric8/kubernetes-model-core@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes Java client libraries in version 10.0.0 and versions prior to 9.0.1 allow writes to paths outside of the current directory when copying multiple files from a remote pod which sends a maliciously crafted archive. This can potentially overwrite any files on the system of the process executing the client code.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-core/5.3.0/kubernetes-model-core-5.3.0.jar</system-err></testcase></testsuite><testsuite failures="0" id="66" name="/home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-discovery/5.3.0/kubernetes-model-discovery-5.3.0.jar" package="kubernetes-model-discovery-5.3.0.jar" skipped="2" tests="2" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2020-8554" name="pkg:maven/io.fabric8/kubernetes-model-discovery@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes API server in all versions allow an attacker who is able to create a ClusterIP service and set the spec.externalIPs field, to intercept traffic to that IP address. Additionally, an attacker who is able to patch the status (which is considered a privileged operation and should not typically be granted to users) of a LoadBalancer service can set the status.loadBalancer.ingress.ip to similar effect.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-discovery/5.3.0/kubernetes-model-discovery-5.3.0.jar</system-err></testcase><testcase classname="CVE-2020-8570" name="pkg:maven/io.fabric8/kubernetes-model-discovery@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes Java client libraries in version 10.0.0 and versions prior to 9.0.1 allow writes to paths outside of the current directory when copying multiple files from a remote pod which sends a maliciously crafted archive. This can potentially overwrite any files on the system of the process executing the client code.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-discovery/5.3.0/kubernetes-model-discovery-5.3.0.jar</system-err></testcase></testsuite><testsuite failures="0" id="67" name="/home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-events/5.3.0/kubernetes-model-events-5.3.0.jar" package="kubernetes-model-events-5.3.0.jar" skipped="2" tests="2" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2020-8554" name="pkg:maven/io.fabric8/kubernetes-model-events@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes API server in all versions allow an attacker who is able to create a ClusterIP service and set the spec.externalIPs field, to intercept traffic to that IP address. Additionally, an attacker who is able to patch the status (which is considered a privileged operation and should not typically be granted to users) of a LoadBalancer service can set the status.loadBalancer.ingress.ip to similar effect.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-events/5.3.0/kubernetes-model-events-5.3.0.jar</system-err></testcase><testcase classname="CVE-2020-8570" name="pkg:maven/io.fabric8/kubernetes-model-events@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes Java client libraries in version 10.0.0 and versions prior to 9.0.1 allow writes to paths outside of the current directory when copying multiple files from a remote pod which sends a maliciously crafted archive. This can potentially overwrite any files on the system of the process executing the client code.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-events/5.3.0/kubernetes-model-events-5.3.0.jar</system-err></testcase></testsuite><testsuite failures="0" id="68" name="/home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-extensions/5.3.0/kubernetes-model-extensions-5.3.0.jar" package="kubernetes-model-extensions-5.3.0.jar" skipped="2" tests="2" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2020-8554" name="pkg:maven/io.fabric8/kubernetes-model-extensions@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes API server in all versions allow an attacker who is able to create a ClusterIP service and set the spec.externalIPs field, to intercept traffic to that IP address. Additionally, an attacker who is able to patch the status (which is considered a privileged operation and should not typically be granted to users) of a LoadBalancer service can set the status.loadBalancer.ingress.ip to similar effect.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-extensions/5.3.0/kubernetes-model-extensions-5.3.0.jar</system-err></testcase><testcase classname="CVE-2020-8570" name="pkg:maven/io.fabric8/kubernetes-model-extensions@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes Java client libraries in version 10.0.0 and versions prior to 9.0.1 allow writes to paths outside of the current directory when copying multiple files from a remote pod which sends a maliciously crafted archive. This can potentially overwrite any files on the system of the process executing the client code.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-extensions/5.3.0/kubernetes-model-extensions-5.3.0.jar</system-err></testcase></testsuite><testsuite failures="0" id="69" name="/home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-metrics/5.3.0/kubernetes-model-metrics-5.3.0.jar" package="kubernetes-model-metrics-5.3.0.jar" skipped="2" tests="2" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2020-8554" name="pkg:maven/io.fabric8/kubernetes-model-metrics@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes API server in all versions allow an attacker who is able to create a ClusterIP service and set the spec.externalIPs field, to intercept traffic to that IP address. Additionally, an attacker who is able to patch the status (which is considered a privileged operation and should not typically be granted to users) of a LoadBalancer service can set the status.loadBalancer.ingress.ip to similar effect.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-metrics/5.3.0/kubernetes-model-metrics-5.3.0.jar</system-err></testcase><testcase classname="CVE-2020-8570" name="pkg:maven/io.fabric8/kubernetes-model-metrics@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes Java client libraries in version 10.0.0 and versions prior to 9.0.1 allow writes to paths outside of the current directory when copying multiple files from a remote pod which sends a maliciously crafted archive. This can potentially overwrite any files on the system of the process executing the client code.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-metrics/5.3.0/kubernetes-model-metrics-5.3.0.jar</system-err></testcase></testsuite><testsuite failures="0" id="70" name="/home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-networking/5.3.0/kubernetes-model-networking-5.3.0.jar" package="kubernetes-model-networking-5.3.0.jar" skipped="2" tests="2" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2020-8554" name="pkg:maven/io.fabric8/kubernetes-model-networking@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes API server in all versions allow an attacker who is able to create a ClusterIP service and set the spec.externalIPs field, to intercept traffic to that IP address. Additionally, an attacker who is able to patch the status (which is considered a privileged operation and should not typically be granted to users) of a LoadBalancer service can set the status.loadBalancer.ingress.ip to similar effect.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-networking/5.3.0/kubernetes-model-networking-5.3.0.jar</system-err></testcase><testcase classname="CVE-2020-8570" name="pkg:maven/io.fabric8/kubernetes-model-networking@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes Java client libraries in version 10.0.0 and versions prior to 9.0.1 allow writes to paths outside of the current directory when copying multiple files from a remote pod which sends a maliciously crafted archive. This can potentially overwrite any files on the system of the process executing the client code.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-networking/5.3.0/kubernetes-model-networking-5.3.0.jar</system-err></testcase></testsuite><testsuite failures="0" id="71" name="/home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-node/5.3.0/kubernetes-model-node-5.3.0.jar" package="kubernetes-model-node-5.3.0.jar" skipped="2" tests="2" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2020-8554" name="pkg:maven/io.fabric8/kubernetes-model-node@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes API server in all versions allow an attacker who is able to create a ClusterIP service and set the spec.externalIPs field, to intercept traffic to that IP address. Additionally, an attacker who is able to patch the status (which is considered a privileged operation and should not typically be granted to users) of a LoadBalancer service can set the status.loadBalancer.ingress.ip to similar effect.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-node/5.3.0/kubernetes-model-node-5.3.0.jar</system-err></testcase><testcase classname="CVE-2020-8570" name="pkg:maven/io.fabric8/kubernetes-model-node@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes Java client libraries in version 10.0.0 and versions prior to 9.0.1 allow writes to paths outside of the current directory when copying multiple files from a remote pod which sends a maliciously crafted archive. This can potentially overwrite any files on the system of the process executing the client code.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-node/5.3.0/kubernetes-model-node-5.3.0.jar</system-err></testcase></testsuite><testsuite failures="0" id="72" name="/home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-policy/5.3.0/kubernetes-model-policy-5.3.0.jar" package="kubernetes-model-policy-5.3.0.jar" skipped="2" tests="2" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2020-8554" name="pkg:maven/io.fabric8/kubernetes-model-policy@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes API server in all versions allow an attacker who is able to create a ClusterIP service and set the spec.externalIPs field, to intercept traffic to that IP address. Additionally, an attacker who is able to patch the status (which is considered a privileged operation and should not typically be granted to users) of a LoadBalancer service can set the status.loadBalancer.ingress.ip to similar effect.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-policy/5.3.0/kubernetes-model-policy-5.3.0.jar</system-err></testcase><testcase classname="CVE-2020-8570" name="pkg:maven/io.fabric8/kubernetes-model-policy@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes Java client libraries in version 10.0.0 and versions prior to 9.0.1 allow writes to paths outside of the current directory when copying multiple files from a remote pod which sends a maliciously crafted archive. This can potentially overwrite any files on the system of the process executing the client code.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-policy/5.3.0/kubernetes-model-policy-5.3.0.jar</system-err></testcase></testsuite><testsuite failures="0" id="73" name="/home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-rbac/5.3.0/kubernetes-model-rbac-5.3.0.jar" package="kubernetes-model-rbac-5.3.0.jar" skipped="2" tests="2" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2020-8554" name="pkg:maven/io.fabric8/kubernetes-model-rbac@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes API server in all versions allow an attacker who is able to create a ClusterIP service and set the spec.externalIPs field, to intercept traffic to that IP address. Additionally, an attacker who is able to patch the status (which is considered a privileged operation and should not typically be granted to users) of a LoadBalancer service can set the status.loadBalancer.ingress.ip to similar effect.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-rbac/5.3.0/kubernetes-model-rbac-5.3.0.jar</system-err></testcase><testcase classname="CVE-2020-8570" name="pkg:maven/io.fabric8/kubernetes-model-rbac@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes Java client libraries in version 10.0.0 and versions prior to 9.0.1 allow writes to paths outside of the current directory when copying multiple files from a remote pod which sends a maliciously crafted archive. This can potentially overwrite any files on the system of the process executing the client code.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-rbac/5.3.0/kubernetes-model-rbac-5.3.0.jar</system-err></testcase></testsuite><testsuite failures="0" id="74" name="/home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-scheduling/5.3.0/kubernetes-model-scheduling-5.3.0.jar" package="kubernetes-model-scheduling-5.3.0.jar" skipped="2" tests="2" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2020-8554" name="pkg:maven/io.fabric8/kubernetes-model-scheduling@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes API server in all versions allow an attacker who is able to create a ClusterIP service and set the spec.externalIPs field, to intercept traffic to that IP address. Additionally, an attacker who is able to patch the status (which is considered a privileged operation and should not typically be granted to users) of a LoadBalancer service can set the status.loadBalancer.ingress.ip to similar effect.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-scheduling/5.3.0/kubernetes-model-scheduling-5.3.0.jar</system-err></testcase><testcase classname="CVE-2020-8570" name="pkg:maven/io.fabric8/kubernetes-model-scheduling@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes Java client libraries in version 10.0.0 and versions prior to 9.0.1 allow writes to paths outside of the current directory when copying multiple files from a remote pod which sends a maliciously crafted archive. This can potentially overwrite any files on the system of the process executing the client code.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-scheduling/5.3.0/kubernetes-model-scheduling-5.3.0.jar</system-err></testcase></testsuite><testsuite failures="0" id="75" name="/home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-storageclass/5.3.0/kubernetes-model-storageclass-5.3.0.jar" package="kubernetes-model-storageclass-5.3.0.jar" skipped="1" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2020-8554" name="pkg:maven/io.fabric8/kubernetes-model-storageclass@5.3.0"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes API server in all versions allow an attacker who is able to create a ClusterIP service and set the spec.externalIPs field, to intercept traffic to that IP address. Additionally, an attacker who is able to patch the status (which is considered a privileged operation and should not typically be granted to users) of a LoadBalancer service can set the status.loadBalancer.ingress.ip to similar effect.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/fabric8/kubernetes-model-storageclass/5.3.0/kubernetes-model-storageclass-5.3.0.jar</system-err></testcase></testsuite><testsuite failures="0" id="76" name="/home/jenkins/.mvnrepository/com/google/guava/listenablefuture/9999.0-empty-to-avoid-conflict-with-guava/listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar" package="listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="listenablefuture-9999.0-empty-to-avoid-conflict-with-guava.jar"/></testsuite><testsuite failures="0" id="77" name="/home/jenkins/.mvnrepository/com/squareup/okhttp3/logging-interceptor/3.12.1/logging-interceptor-3.12.1.jar" package="logging-interceptor-3.12.1.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="logging-interceptor-3.12.1.jar"/></testsuite><testsuite failures="0" id="78" name="/home/jenkins/.mvnrepository/org/eclipse/microprofile/config/microprofile-config-api/1.4/microprofile-config-api-1.4.jar" package="microprofile-config-api-1.4.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="microprofile-config-api-1.4.jar"/></testsuite><testsuite failures="0" id="79" name="/home/jenkins/.mvnrepository/org/eclipse/microprofile/context-propagation/microprofile-context-propagation-api/1.0.1/microprofile-context-propagation-api-1.0.1.jar" package="microprofile-context-propagation-api-1.0.1.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="microprofile-context-propagation-api-1.0.1.jar"/></testsuite><testsuite failures="0" id="80" name="/home/jenkins/.mvnrepository/com/github/fge/msg-simple/1.1/msg-simple-1.1.jar" package="msg-simple-1.1.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="msg-simple-1.1.jar"/></testsuite><testsuite failures="0" id="81" name="/home/jenkins/.mvnrepository/com/squareup/okhttp3/okhttp/3.12.1/okhttp-3.12.1.jar" package="okhttp-3.12.1.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="okhttp-3.12.1.jar"/></testsuite><testsuite failures="0" id="82" name="/home/jenkins/.mvnrepository/com/squareup/okio/okio/1.15.0/okio-1.15.0.jar" package="okio-1.15.0.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="okio-1.15.0.jar"/></testsuite><testsuite failures="0" id="83" name="/home/jenkins/.mvnrepository/info/picocli/picocli/4.6.1/picocli-4.6.1.jar" package="picocli-4.6.1.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="picocli-4.6.1.jar"/></testsuite><testsuite failures="4" id="84" name="/home/jenkins/.mvnrepository/io/quarkus/quarkus-arc/1.13.2.Final/quarkus-arc-1.13.2.Final.jar" package="quarkus-arc-1.13.2.Final.jar" skipped="0" tests="4" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2021-20289" name="pkg:maven/io.quarkus/quarkus-arc@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N)"/><system-out>A flaw was found in RESTEasy in all versions of RESTEasy up to 4.6.0.Final. The endpoint class and method names are returned as part of the exception response when RESTEasy cannot convert one of the request URI path or query values to the matching JAX-RS resource method&apos;s parameter value. The highest threat from this vulnerability is to data confidentiality.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-arc/1.13.2.Final/quarkus-arc-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2021-20328" name="pkg:maven/io.quarkus/quarkus-arc@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 6.8 (CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N)"/><system-out>Specific versions of the Java driver that support client-side field level encryption (CSFLE) fail to perform correct host name verification on the KMS server’s certificate. This vulnerability in combination with a privileged network position active MITM attack could result in interception of traffic between the Java driver and the KMS service rendering Field Level Encryption ineffective. This issue was discovered during internal testing and affects all versions of the Java driver that support CSFLE. The Java async, Scala, and reactive streams drivers are not impacted. This vulnerability does not impact driver traffic payloads with CSFLE-supported key services originating from applications residing inside the AWS, GCP, and Azure network fabrics due to compensating controls in these environments. This issue does not impact driver workloads that don’t use Field Level Encryption.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-arc/1.13.2.Final/quarkus-arc-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2021-21290" name="pkg:maven/io.quarkus/quarkus-arc@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 5.5 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N)"/><system-out>Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty&apos;s multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method &quot;File.createTempFile&quot; on unix-like systems creates a random file, but, by default will create this file with the permissions &quot;-rw-r--r--&quot;. Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty&apos;s &quot;AbstractDiskHttpData&quot; is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own &quot;java.io.tmpdir&quot; when you start the JVM or use &quot;DefaultHttpDataFactory.setBaseDir(...)&quot; to set the directory to something that is only readable by the current user.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-arc/1.13.2.Final/quarkus-arc-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2021-21295" name="pkg:maven/io.quarkus/quarkus-arc@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 5.9 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N)"/><system-out>Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. In Netty (io.netty:netty-codec-http2) before version 4.1.60.Final there is a vulnerability that enables request smuggling. If a Content-Length header is present in the original HTTP/2 request, the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is fine as long as the request is not proxied through as HTTP/1.1. If the request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1 domain objects (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel&apos;s pipeline and proxied through a remote peer as HTTP/1.1 this may result in request smuggling. In a proxy case, users may assume the content-length is validated somehow, which is not the case. If the request is forwarded to a backend channel that is a HTTP/1.1 connection, the Content-Length now has meaning and needs to be checked. An attacker can smuggle requests inside the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example attack refer to the linked GitHub Advisory. Users are only affected if all of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects, and these HTTP/1.1 objects are forwarded to another remote peer. This has been patched in 4.1.60.Final As a workaround, the user can do the validation by themselves by implementing a custom `ChannelInboundHandler` that is put in the `ChannelPipeline` behind `Http2StreamFrameToHttpObjectCodec`.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-arc/1.13.2.Final/quarkus-arc-1.13.2.Final.jar</system-err></testcase></testsuite><testsuite failures="4" id="85" name="/home/jenkins/.mvnrepository/io/quarkus/quarkus-bootstrap-runner/1.13.2.Final/quarkus-bootstrap-runner-1.13.2.Final.jar" package="quarkus-bootstrap-runner-1.13.2.Final.jar" skipped="0" tests="4" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2021-20289" name="pkg:maven/io.quarkus/quarkus-bootstrap-runner@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N)"/><system-out>A flaw was found in RESTEasy in all versions of RESTEasy up to 4.6.0.Final. The endpoint class and method names are returned as part of the exception response when RESTEasy cannot convert one of the request URI path or query values to the matching JAX-RS resource method&apos;s parameter value. The highest threat from this vulnerability is to data confidentiality.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-bootstrap-runner/1.13.2.Final/quarkus-bootstrap-runner-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2021-20328" name="pkg:maven/io.quarkus/quarkus-bootstrap-runner@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 6.8 (CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N)"/><system-out>Specific versions of the Java driver that support client-side field level encryption (CSFLE) fail to perform correct host name verification on the KMS server’s certificate. This vulnerability in combination with a privileged network position active MITM attack could result in interception of traffic between the Java driver and the KMS service rendering Field Level Encryption ineffective. This issue was discovered during internal testing and affects all versions of the Java driver that support CSFLE. The Java async, Scala, and reactive streams drivers are not impacted. This vulnerability does not impact driver traffic payloads with CSFLE-supported key services originating from applications residing inside the AWS, GCP, and Azure network fabrics due to compensating controls in these environments. This issue does not impact driver workloads that don’t use Field Level Encryption.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-bootstrap-runner/1.13.2.Final/quarkus-bootstrap-runner-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2021-21290" name="pkg:maven/io.quarkus/quarkus-bootstrap-runner@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 5.5 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N)"/><system-out>Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty&apos;s multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method &quot;File.createTempFile&quot; on unix-like systems creates a random file, but, by default will create this file with the permissions &quot;-rw-r--r--&quot;. Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty&apos;s &quot;AbstractDiskHttpData&quot; is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own &quot;java.io.tmpdir&quot; when you start the JVM or use &quot;DefaultHttpDataFactory.setBaseDir(...)&quot; to set the directory to something that is only readable by the current user.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-bootstrap-runner/1.13.2.Final/quarkus-bootstrap-runner-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2021-21295" name="pkg:maven/io.quarkus/quarkus-bootstrap-runner@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 5.9 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N)"/><system-out>Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. In Netty (io.netty:netty-codec-http2) before version 4.1.60.Final there is a vulnerability that enables request smuggling. If a Content-Length header is present in the original HTTP/2 request, the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is fine as long as the request is not proxied through as HTTP/1.1. If the request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1 domain objects (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel&apos;s pipeline and proxied through a remote peer as HTTP/1.1 this may result in request smuggling. In a proxy case, users may assume the content-length is validated somehow, which is not the case. If the request is forwarded to a backend channel that is a HTTP/1.1 connection, the Content-Length now has meaning and needs to be checked. An attacker can smuggle requests inside the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example attack refer to the linked GitHub Advisory. Users are only affected if all of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects, and these HTTP/1.1 objects are forwarded to another remote peer. This has been patched in 4.1.60.Final As a workaround, the user can do the validation by themselves by implementing a custom `ChannelInboundHandler` that is put in the `ChannelPipeline` behind `Http2StreamFrameToHttpObjectCodec`.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-bootstrap-runner/1.13.2.Final/quarkus-bootstrap-runner-1.13.2.Final.jar</system-err></testcase></testsuite><testsuite failures="4" id="86" name="/home/jenkins/.mvnrepository/io/quarkus/quarkus-core/1.13.2.Final/quarkus-core-1.13.2.Final.jar" package="quarkus-core-1.13.2.Final.jar" skipped="0" tests="4" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2021-20289" name="pkg:maven/io.quarkus/quarkus-core@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N)"/><system-out>A flaw was found in RESTEasy in all versions of RESTEasy up to 4.6.0.Final. The endpoint class and method names are returned as part of the exception response when RESTEasy cannot convert one of the request URI path or query values to the matching JAX-RS resource method&apos;s parameter value. The highest threat from this vulnerability is to data confidentiality.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-core/1.13.2.Final/quarkus-core-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2021-20328" name="pkg:maven/io.quarkus/quarkus-core@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 6.8 (CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N)"/><system-out>Specific versions of the Java driver that support client-side field level encryption (CSFLE) fail to perform correct host name verification on the KMS server’s certificate. This vulnerability in combination with a privileged network position active MITM attack could result in interception of traffic between the Java driver and the KMS service rendering Field Level Encryption ineffective. This issue was discovered during internal testing and affects all versions of the Java driver that support CSFLE. The Java async, Scala, and reactive streams drivers are not impacted. This vulnerability does not impact driver traffic payloads with CSFLE-supported key services originating from applications residing inside the AWS, GCP, and Azure network fabrics due to compensating controls in these environments. This issue does not impact driver workloads that don’t use Field Level Encryption.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-core/1.13.2.Final/quarkus-core-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2021-21290" name="pkg:maven/io.quarkus/quarkus-core@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 5.5 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N)"/><system-out>Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty&apos;s multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method &quot;File.createTempFile&quot; on unix-like systems creates a random file, but, by default will create this file with the permissions &quot;-rw-r--r--&quot;. Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty&apos;s &quot;AbstractDiskHttpData&quot; is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own &quot;java.io.tmpdir&quot; when you start the JVM or use &quot;DefaultHttpDataFactory.setBaseDir(...)&quot; to set the directory to something that is only readable by the current user.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-core/1.13.2.Final/quarkus-core-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2021-21295" name="pkg:maven/io.quarkus/quarkus-core@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 5.9 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N)"/><system-out>Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. In Netty (io.netty:netty-codec-http2) before version 4.1.60.Final there is a vulnerability that enables request smuggling. If a Content-Length header is present in the original HTTP/2 request, the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is fine as long as the request is not proxied through as HTTP/1.1. If the request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1 domain objects (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel&apos;s pipeline and proxied through a remote peer as HTTP/1.1 this may result in request smuggling. In a proxy case, users may assume the content-length is validated somehow, which is not the case. If the request is forwarded to a backend channel that is a HTTP/1.1 connection, the Content-Length now has meaning and needs to be checked. An attacker can smuggle requests inside the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example attack refer to the linked GitHub Advisory. Users are only affected if all of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects, and these HTTP/1.1 objects are forwarded to another remote peer. This has been patched in 4.1.60.Final As a workaround, the user can do the validation by themselves by implementing a custom `ChannelInboundHandler` that is put in the `ChannelPipeline` behind `Http2StreamFrameToHttpObjectCodec`.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-core/1.13.2.Final/quarkus-core-1.13.2.Final.jar</system-err></testcase></testsuite><testsuite failures="4" id="87" name="/home/jenkins/.mvnrepository/io/quarkus/quarkus-development-mode-spi/1.13.2.Final/quarkus-development-mode-spi-1.13.2.Final.jar" package="quarkus-development-mode-spi-1.13.2.Final.jar" skipped="0" tests="4" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2021-20289" name="pkg:maven/io.quarkus/quarkus-development-mode-spi@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N)"/><system-out>A flaw was found in RESTEasy in all versions of RESTEasy up to 4.6.0.Final. The endpoint class and method names are returned as part of the exception response when RESTEasy cannot convert one of the request URI path or query values to the matching JAX-RS resource method&apos;s parameter value. The highest threat from this vulnerability is to data confidentiality.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-development-mode-spi/1.13.2.Final/quarkus-development-mode-spi-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2021-20328" name="pkg:maven/io.quarkus/quarkus-development-mode-spi@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 6.8 (CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N)"/><system-out>Specific versions of the Java driver that support client-side field level encryption (CSFLE) fail to perform correct host name verification on the KMS server’s certificate. This vulnerability in combination with a privileged network position active MITM attack could result in interception of traffic between the Java driver and the KMS service rendering Field Level Encryption ineffective. This issue was discovered during internal testing and affects all versions of the Java driver that support CSFLE. The Java async, Scala, and reactive streams drivers are not impacted. This vulnerability does not impact driver traffic payloads with CSFLE-supported key services originating from applications residing inside the AWS, GCP, and Azure network fabrics due to compensating controls in these environments. This issue does not impact driver workloads that don’t use Field Level Encryption.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-development-mode-spi/1.13.2.Final/quarkus-development-mode-spi-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2021-21290" name="pkg:maven/io.quarkus/quarkus-development-mode-spi@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 5.5 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N)"/><system-out>Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty&apos;s multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method &quot;File.createTempFile&quot; on unix-like systems creates a random file, but, by default will create this file with the permissions &quot;-rw-r--r--&quot;. Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty&apos;s &quot;AbstractDiskHttpData&quot; is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own &quot;java.io.tmpdir&quot; when you start the JVM or use &quot;DefaultHttpDataFactory.setBaseDir(...)&quot; to set the directory to something that is only readable by the current user.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-development-mode-spi/1.13.2.Final/quarkus-development-mode-spi-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2021-21295" name="pkg:maven/io.quarkus/quarkus-development-mode-spi@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 5.9 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N)"/><system-out>Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. In Netty (io.netty:netty-codec-http2) before version 4.1.60.Final there is a vulnerability that enables request smuggling. If a Content-Length header is present in the original HTTP/2 request, the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is fine as long as the request is not proxied through as HTTP/1.1. If the request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1 domain objects (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel&apos;s pipeline and proxied through a remote peer as HTTP/1.1 this may result in request smuggling. In a proxy case, users may assume the content-length is validated somehow, which is not the case. If the request is forwarded to a backend channel that is a HTTP/1.1 connection, the Content-Length now has meaning and needs to be checked. An attacker can smuggle requests inside the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example attack refer to the linked GitHub Advisory. Users are only affected if all of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects, and these HTTP/1.1 objects are forwarded to another remote peer. This has been patched in 4.1.60.Final As a workaround, the user can do the validation by themselves by implementing a custom `ChannelInboundHandler` that is put in the `ChannelPipeline` behind `Http2StreamFrameToHttpObjectCodec`.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-development-mode-spi/1.13.2.Final/quarkus-development-mode-spi-1.13.2.Final.jar</system-err></testcase></testsuite><testsuite failures="4" id="88" name="/home/jenkins/.mvnrepository/io/quarkus/quarkus-ide-launcher/1.13.2.Final/quarkus-ide-launcher-1.13.2.Final.jar" package="quarkus-ide-launcher-1.13.2.Final.jar" skipped="0" tests="4" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2021-20289" name="pkg:maven/io.quarkus/quarkus-ide-launcher@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N)"/><system-out>A flaw was found in RESTEasy in all versions of RESTEasy up to 4.6.0.Final. The endpoint class and method names are returned as part of the exception response when RESTEasy cannot convert one of the request URI path or query values to the matching JAX-RS resource method&apos;s parameter value. The highest threat from this vulnerability is to data confidentiality.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-ide-launcher/1.13.2.Final/quarkus-ide-launcher-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2021-20328" name="pkg:maven/io.quarkus/quarkus-ide-launcher@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 6.8 (CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N)"/><system-out>Specific versions of the Java driver that support client-side field level encryption (CSFLE) fail to perform correct host name verification on the KMS server’s certificate. This vulnerability in combination with a privileged network position active MITM attack could result in interception of traffic between the Java driver and the KMS service rendering Field Level Encryption ineffective. This issue was discovered during internal testing and affects all versions of the Java driver that support CSFLE. The Java async, Scala, and reactive streams drivers are not impacted. This vulnerability does not impact driver traffic payloads with CSFLE-supported key services originating from applications residing inside the AWS, GCP, and Azure network fabrics due to compensating controls in these environments. This issue does not impact driver workloads that don’t use Field Level Encryption.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-ide-launcher/1.13.2.Final/quarkus-ide-launcher-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2021-21290" name="pkg:maven/io.quarkus/quarkus-ide-launcher@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 5.5 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N)"/><system-out>Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty&apos;s multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method &quot;File.createTempFile&quot; on unix-like systems creates a random file, but, by default will create this file with the permissions &quot;-rw-r--r--&quot;. Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty&apos;s &quot;AbstractDiskHttpData&quot; is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own &quot;java.io.tmpdir&quot; when you start the JVM or use &quot;DefaultHttpDataFactory.setBaseDir(...)&quot; to set the directory to something that is only readable by the current user.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-ide-launcher/1.13.2.Final/quarkus-ide-launcher-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2021-21295" name="pkg:maven/io.quarkus/quarkus-ide-launcher@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 5.9 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N)"/><system-out>Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. In Netty (io.netty:netty-codec-http2) before version 4.1.60.Final there is a vulnerability that enables request smuggling. If a Content-Length header is present in the original HTTP/2 request, the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is fine as long as the request is not proxied through as HTTP/1.1. If the request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1 domain objects (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel&apos;s pipeline and proxied through a remote peer as HTTP/1.1 this may result in request smuggling. In a proxy case, users may assume the content-length is validated somehow, which is not the case. If the request is forwarded to a backend channel that is a HTTP/1.1 connection, the Content-Length now has meaning and needs to be checked. An attacker can smuggle requests inside the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example attack refer to the linked GitHub Advisory. Users are only affected if all of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects, and these HTTP/1.1 objects are forwarded to another remote peer. This has been patched in 4.1.60.Final As a workaround, the user can do the validation by themselves by implementing a custom `ChannelInboundHandler` that is put in the `ChannelPipeline` behind `Http2StreamFrameToHttpObjectCodec`.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-ide-launcher/1.13.2.Final/quarkus-ide-launcher-1.13.2.Final.jar</system-err></testcase></testsuite><testsuite failures="4" id="89" name="/home/jenkins/.mvnrepository/io/quarkus/quarkus-jackson/1.13.2.Final/quarkus-jackson-1.13.2.Final.jar" package="quarkus-jackson-1.13.2.Final.jar" skipped="0" tests="4" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2021-20289" name="pkg:maven/io.quarkus/quarkus-jackson@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N)"/><system-out>A flaw was found in RESTEasy in all versions of RESTEasy up to 4.6.0.Final. The endpoint class and method names are returned as part of the exception response when RESTEasy cannot convert one of the request URI path or query values to the matching JAX-RS resource method&apos;s parameter value. The highest threat from this vulnerability is to data confidentiality.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-jackson/1.13.2.Final/quarkus-jackson-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2021-20328" name="pkg:maven/io.quarkus/quarkus-jackson@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 6.8 (CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N)"/><system-out>Specific versions of the Java driver that support client-side field level encryption (CSFLE) fail to perform correct host name verification on the KMS server’s certificate. This vulnerability in combination with a privileged network position active MITM attack could result in interception of traffic between the Java driver and the KMS service rendering Field Level Encryption ineffective. This issue was discovered during internal testing and affects all versions of the Java driver that support CSFLE. The Java async, Scala, and reactive streams drivers are not impacted. This vulnerability does not impact driver traffic payloads with CSFLE-supported key services originating from applications residing inside the AWS, GCP, and Azure network fabrics due to compensating controls in these environments. This issue does not impact driver workloads that don’t use Field Level Encryption.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-jackson/1.13.2.Final/quarkus-jackson-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2021-21290" name="pkg:maven/io.quarkus/quarkus-jackson@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 5.5 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N)"/><system-out>Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty&apos;s multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method &quot;File.createTempFile&quot; on unix-like systems creates a random file, but, by default will create this file with the permissions &quot;-rw-r--r--&quot;. Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty&apos;s &quot;AbstractDiskHttpData&quot; is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own &quot;java.io.tmpdir&quot; when you start the JVM or use &quot;DefaultHttpDataFactory.setBaseDir(...)&quot; to set the directory to something that is only readable by the current user.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-jackson/1.13.2.Final/quarkus-jackson-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2021-21295" name="pkg:maven/io.quarkus/quarkus-jackson@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 5.9 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N)"/><system-out>Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. In Netty (io.netty:netty-codec-http2) before version 4.1.60.Final there is a vulnerability that enables request smuggling. If a Content-Length header is present in the original HTTP/2 request, the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is fine as long as the request is not proxied through as HTTP/1.1. If the request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1 domain objects (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel&apos;s pipeline and proxied through a remote peer as HTTP/1.1 this may result in request smuggling. In a proxy case, users may assume the content-length is validated somehow, which is not the case. If the request is forwarded to a backend channel that is a HTTP/1.1 connection, the Content-Length now has meaning and needs to be checked. An attacker can smuggle requests inside the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example attack refer to the linked GitHub Advisory. Users are only affected if all of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects, and these HTTP/1.1 objects are forwarded to another remote peer. This has been patched in 4.1.60.Final As a workaround, the user can do the validation by themselves by implementing a custom `ChannelInboundHandler` that is put in the `ChannelPipeline` behind `Http2StreamFrameToHttpObjectCodec`.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-jackson/1.13.2.Final/quarkus-jackson-1.13.2.Final.jar</system-err></testcase></testsuite><testsuite failures="4" id="90" name="/home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client/1.13.2.Final/quarkus-kubernetes-client-1.13.2.Final.jar" package="quarkus-kubernetes-client-1.13.2.Final.jar" skipped="20" tests="24" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2021-20289" name="pkg:maven/io.quarkus/quarkus-kubernetes-client@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N)"/><system-out>A flaw was found in RESTEasy in all versions of RESTEasy up to 4.6.0.Final. The endpoint class and method names are returned as part of the exception response when RESTEasy cannot convert one of the request URI path or query values to the matching JAX-RS resource method&apos;s parameter value. The highest threat from this vulnerability is to data confidentiality.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client/1.13.2.Final/quarkus-kubernetes-client-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2021-20328" name="pkg:maven/io.quarkus/quarkus-kubernetes-client@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 6.8 (CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N)"/><system-out>Specific versions of the Java driver that support client-side field level encryption (CSFLE) fail to perform correct host name verification on the KMS server’s certificate. This vulnerability in combination with a privileged network position active MITM attack could result in interception of traffic between the Java driver and the KMS service rendering Field Level Encryption ineffective. This issue was discovered during internal testing and affects all versions of the Java driver that support CSFLE. The Java async, Scala, and reactive streams drivers are not impacted. This vulnerability does not impact driver traffic payloads with CSFLE-supported key services originating from applications residing inside the AWS, GCP, and Azure network fabrics due to compensating controls in these environments. This issue does not impact driver workloads that don’t use Field Level Encryption.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client/1.13.2.Final/quarkus-kubernetes-client-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2021-21290" name="pkg:maven/io.quarkus/quarkus-kubernetes-client@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 5.5 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N)"/><system-out>Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty&apos;s multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method &quot;File.createTempFile&quot; on unix-like systems creates a random file, but, by default will create this file with the permissions &quot;-rw-r--r--&quot;. Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty&apos;s &quot;AbstractDiskHttpData&quot; is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own &quot;java.io.tmpdir&quot; when you start the JVM or use &quot;DefaultHttpDataFactory.setBaseDir(...)&quot; to set the directory to something that is only readable by the current user.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client/1.13.2.Final/quarkus-kubernetes-client-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2021-21295" name="pkg:maven/io.quarkus/quarkus-kubernetes-client@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 5.9 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N)"/><system-out>Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. In Netty (io.netty:netty-codec-http2) before version 4.1.60.Final there is a vulnerability that enables request smuggling. If a Content-Length header is present in the original HTTP/2 request, the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is fine as long as the request is not proxied through as HTTP/1.1. If the request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1 domain objects (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel&apos;s pipeline and proxied through a remote peer as HTTP/1.1 this may result in request smuggling. In a proxy case, users may assume the content-length is validated somehow, which is not the case. If the request is forwarded to a backend channel that is a HTTP/1.1 connection, the Content-Length now has meaning and needs to be checked. An attacker can smuggle requests inside the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example attack refer to the linked GitHub Advisory. Users are only affected if all of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects, and these HTTP/1.1 objects are forwarded to another remote peer. This has been patched in 4.1.60.Final As a workaround, the user can do the validation by themselves by implementing a custom `ChannelInboundHandler` that is put in the `ChannelPipeline` behind `Http2StreamFrameToHttpObjectCodec`.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client/1.13.2.Final/quarkus-kubernetes-client-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2019-11246" name="pkg:maven/io.quarkus/quarkus-kubernetes-client@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The kubectl cp command allows copying files between containers and the user machine. To copy files from a container, Kubernetes runs tar inside the container to create a tar archive, copies it over the network, and kubectl unpacks it on the user’s machine. If the tar binary in the container is malicious, it could run any code and output unexpected, malicious results. An attacker could use this to write files to any path on the user’s machine when kubectl cp is called, limited only by the system permissions of the local user. Kubernetes affected versions include versions prior to 1.12.9, versions prior to 1.13.6, versions prior to 1.14.2, and versions 1.1, 1.2, 1.4, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 1.10, 1.11.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client/1.13.2.Final/quarkus-kubernetes-client-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2020-8555" name="pkg:maven/io.quarkus/quarkus-kubernetes-client@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The Kubernetes kube-controller-manager in versions v1.0-1.14, versions prior to v1.15.12, v1.16.9, v1.17.5, and version v1.18.0 are vulnerable to a Server Side Request Forgery (SSRF) that allows certain authorized users to leak up to 500 bytes of arbitrary information from unprotected endpoints within the master&apos;s host network (such as link-local or loopback services).</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client/1.13.2.Final/quarkus-kubernetes-client-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2019-11254" name="pkg:maven/io.quarkus/quarkus-kubernetes-client@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The Kubernetes API Server component in versions 1.1-1.14, and versions prior to 1.15.10, 1.16.7 and 1.17.3 allows an authorized user who sends malicious YAML payloads to cause the kube-apiserver to consume excessive CPU cycles while parsing YAML.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client/1.13.2.Final/quarkus-kubernetes-client-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2020-8554" name="pkg:maven/io.quarkus/quarkus-kubernetes-client@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes API server in all versions allow an attacker who is able to create a ClusterIP service and set the spec.externalIPs field, to intercept traffic to that IP address. Additionally, an attacker who is able to patch the status (which is considered a privileged operation and should not typically be granted to users) of a LoadBalancer service can set the status.loadBalancer.ingress.ip to similar effect.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client/1.13.2.Final/quarkus-kubernetes-client-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2019-1002100" name="pkg:maven/io.quarkus/quarkus-kubernetes-client@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>In all Kubernetes versions prior to v1.11.8, v1.12.6, and v1.13.4, users that are authorized to make patch requests to the Kubernetes API Server can send a specially crafted patch of type &quot;json-patch&quot; (e.g. `kubectl patch --type json` or `&quot;Content-Type: application/json-patch+json&quot;`) that consumes excessive resources while processing, causing a Denial of Service on the API Server.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client/1.13.2.Final/quarkus-kubernetes-client-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2019-11244" name="pkg:maven/io.quarkus/quarkus-kubernetes-client@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>In Kubernetes v1.8.x-v1.14.x, schema info is cached by kubectl in the location specified by --cache-dir (defaulting to $HOME/.kube/http-cache), written with world-writeable permissions (rw-rw-rw-). If --cache-dir is specified and pointed at a different location accessible to other users/groups, the written files may be modified by other users/groups and disrupt the kubectl invocation.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client/1.13.2.Final/quarkus-kubernetes-client-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2019-11249" name="pkg:maven/io.quarkus/quarkus-kubernetes-client@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The kubectl cp command allows copying files between containers and the user machine. To copy files from a container, Kubernetes runs tar inside the container to create a tar archive, copies it over the network, and kubectl unpacks it on the user’s machine. If the tar binary in the container is malicious, it could run any code and output unexpected, malicious results. An attacker could use this to write files to any path on the user’s machine when kubectl cp is called, limited only by the system permissions of the local user. Kubernetes affected versions include versions prior to 1.13.9, versions prior to 1.14.5, versions prior to 1.15.2, and versions 1.1, 1.2, 1.4, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 1.10, 1.11, 1.12.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client/1.13.2.Final/quarkus-kubernetes-client-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2020-8552" name="pkg:maven/io.quarkus/quarkus-kubernetes-client@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The Kubernetes API server component in versions prior to 1.15.9, 1.16.0-1.16.6, and 1.17.0-1.17.2 has been found to be vulnerable to a denial of service attack via successful API requests.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client/1.13.2.Final/quarkus-kubernetes-client-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2020-8563" name="pkg:maven/io.quarkus/quarkus-kubernetes-client@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>In Kubernetes clusters using VSphere as a cloud provider, with a logging level set to 4 or above, VSphere cloud credentials will be leaked in the cloud controller manager&apos;s log. This affects &lt; v1.19.3.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client/1.13.2.Final/quarkus-kubernetes-client-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2019-11247" name="pkg:maven/io.quarkus/quarkus-kubernetes-client@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The Kubernetes kube-apiserver mistakenly allows access to a cluster-scoped custom resource if the request is made as if the resource were namespaced. Authorizations for the resource accessed in this manner are enforced using roles and role bindings within the namespace, meaning that a user with access only to a resource in one namespace could create, view update or delete the cluster-scoped resource (according to their namespace role privileges). Kubernetes affected versions include versions prior to 1.13.9, versions prior to 1.14.5, versions prior to 1.15.2, and versions 1.7, 1.8, 1.9, 1.10, 1.11, 1.12.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client/1.13.2.Final/quarkus-kubernetes-client-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2019-11248" name="pkg:maven/io.quarkus/quarkus-kubernetes-client@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The debugging endpoint /debug/pprof is exposed over the unauthenticated Kubelet healthz port. The go pprof endpoint is exposed over the Kubelet&apos;s healthz port. This debugging endpoint can potentially leak sensitive information such as internal Kubelet memory addresses and configuration, or for limited denial of service. Versions prior to 1.15.0, 1.14.4, 1.13.8, and 1.12.10 are affected. The issue is of medium severity, but not exposed by the default configuration.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client/1.13.2.Final/quarkus-kubernetes-client-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2019-9946" name="pkg:maven/io.quarkus/quarkus-kubernetes-client@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Cloud Native Computing Foundation (CNCF) CNI (Container Networking Interface) 0.7.4 has a network firewall misconfiguration which affects Kubernetes. The CNI &apos;portmap&apos; plugin, used to setup HostPorts for CNI, inserts rules at the front of the iptables nat chains; which take precedence over the KUBE- SERVICES chain. Because of this, the HostPort/portmap rule could match incoming traffic even if there were better fitting, more specific service definition rules like NodePorts later in the chain. The issue is fixed in CNI 0.7.5 and Kubernetes 1.11.9, 1.12.7, 1.13.5, and 1.14.0.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client/1.13.2.Final/quarkus-kubernetes-client-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2018-1002102" name="pkg:maven/io.quarkus/quarkus-kubernetes-client@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Improper validation of URL redirection in the Kubernetes API server in versions prior to v1.14.0 allows an attacker-controlled Kubelet to redirect API server requests from streaming endpoints to arbitrary hosts. Impacted API servers will follow the redirect as a GET request with client-certificate credentials for authenticating to the Kubelet.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client/1.13.2.Final/quarkus-kubernetes-client-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2019-1002101" name="pkg:maven/io.quarkus/quarkus-kubernetes-client@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The kubectl cp command allows copying files between containers and the user machine. To copy files from a container, Kubernetes creates a tar inside the container, copies it over the network, and kubectl unpacks it on the user’s machine. If the tar binary in the container is malicious, it could run any code and output unexpected, malicious results. An attacker could use this to write files to any path on the user’s machine when kubectl cp is called, limited only by the system permissions of the local user. The untar function can both create and follow symbolic links. The issue is resolved in kubectl v1.11.9, v1.12.7, v1.13.5, and v1.14.0.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client/1.13.2.Final/quarkus-kubernetes-client-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2019-11252" name="pkg:maven/io.quarkus/quarkus-kubernetes-client@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The Kubernetes kube-controller-manager in versions v1.0-v1.17 is vulnerable to a credential leakage via error messages in mount failure logs and events for AzureFile and CephFS volumes.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client/1.13.2.Final/quarkus-kubernetes-client-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2020-8559" name="pkg:maven/io.quarkus/quarkus-kubernetes-client@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The Kubernetes kube-apiserver in versions v1.6-v1.15, and versions prior to v1.16.13, v1.17.9 and v1.18.6 are vulnerable to an unvalidated redirect on proxied upgrade requests that could allow an attacker to escalate privileges from a node compromise to a full cluster compromise.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client/1.13.2.Final/quarkus-kubernetes-client-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2019-11250" name="pkg:maven/io.quarkus/quarkus-kubernetes-client@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The Kubernetes client-go library logs request headers at verbosity levels of 7 or higher. This can disclose credentials to unauthorized users via logs or command output. Kubernetes components (such as kube-apiserver) prior to v1.16.0, which make use of basic or bearer token authentication, and run at high verbosity levels, are affected.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client/1.13.2.Final/quarkus-kubernetes-client-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2020-8558" name="pkg:maven/io.quarkus/quarkus-kubernetes-client@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The Kubelet and kube-proxy components in versions 1.1.0-1.16.10, 1.17.0-1.17.6, and 1.18.0-1.18.3 were found to contain a security issue which allows adjacent hosts to reach TCP and UDP services bound to 127.0.0.1 running on the node or in the node&apos;s network namespace. Such a service is generally thought to be reachable only by other processes on the same host, but due to this defeect, could be reachable by other hosts on the same LAN as the node, or by containers running on the same node as the service.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client/1.13.2.Final/quarkus-kubernetes-client-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2019-11251" name="pkg:maven/io.quarkus/quarkus-kubernetes-client@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The Kubernetes kubectl cp command in versions 1.1-1.12, and versions prior to 1.13.11, 1.14.7, and 1.15.4 allows a combination of two symlinks provided by tar output of a malicious container to place a file outside of the destination directory specified in the kubectl cp invocation. This could be used to allow an attacker to place a nefarious file using a symlink, outside of the destination tree.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client/1.13.2.Final/quarkus-kubernetes-client-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2020-8557" name="pkg:maven/io.quarkus/quarkus-kubernetes-client@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The Kubernetes kubelet component in versions 1.1-1.16.12, 1.17.0-1.17.8 and 1.18.0-1.18.5 do not account for disk usage by a pod which writes to its own /etc/hosts file. The /etc/hosts file mounted in a pod by kubelet is not included by the kubelet eviction manager when calculating ephemeral storage usage by a pod. If a pod writes a large amount of data to the /etc/hosts file, it could fill the storage space of the node and cause the node to fail.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client/1.13.2.Final/quarkus-kubernetes-client-1.13.2.Final.jar</system-err></testcase></testsuite><testsuite failures="4" id="91" name="/home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client-internal/1.13.2.Final/quarkus-kubernetes-client-internal-1.13.2.Final.jar" package="quarkus-kubernetes-client-internal-1.13.2.Final.jar" skipped="20" tests="24" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2021-20289" name="pkg:maven/io.quarkus/quarkus-kubernetes-client-internal@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N)"/><system-out>A flaw was found in RESTEasy in all versions of RESTEasy up to 4.6.0.Final. The endpoint class and method names are returned as part of the exception response when RESTEasy cannot convert one of the request URI path or query values to the matching JAX-RS resource method&apos;s parameter value. The highest threat from this vulnerability is to data confidentiality.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client-internal/1.13.2.Final/quarkus-kubernetes-client-internal-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2021-20328" name="pkg:maven/io.quarkus/quarkus-kubernetes-client-internal@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 6.8 (CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N)"/><system-out>Specific versions of the Java driver that support client-side field level encryption (CSFLE) fail to perform correct host name verification on the KMS server’s certificate. This vulnerability in combination with a privileged network position active MITM attack could result in interception of traffic between the Java driver and the KMS service rendering Field Level Encryption ineffective. This issue was discovered during internal testing and affects all versions of the Java driver that support CSFLE. The Java async, Scala, and reactive streams drivers are not impacted. This vulnerability does not impact driver traffic payloads with CSFLE-supported key services originating from applications residing inside the AWS, GCP, and Azure network fabrics due to compensating controls in these environments. This issue does not impact driver workloads that don’t use Field Level Encryption.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client-internal/1.13.2.Final/quarkus-kubernetes-client-internal-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2021-21290" name="pkg:maven/io.quarkus/quarkus-kubernetes-client-internal@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 5.5 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N)"/><system-out>Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty&apos;s multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method &quot;File.createTempFile&quot; on unix-like systems creates a random file, but, by default will create this file with the permissions &quot;-rw-r--r--&quot;. Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty&apos;s &quot;AbstractDiskHttpData&quot; is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own &quot;java.io.tmpdir&quot; when you start the JVM or use &quot;DefaultHttpDataFactory.setBaseDir(...)&quot; to set the directory to something that is only readable by the current user.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client-internal/1.13.2.Final/quarkus-kubernetes-client-internal-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2021-21295" name="pkg:maven/io.quarkus/quarkus-kubernetes-client-internal@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 5.9 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N)"/><system-out>Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. In Netty (io.netty:netty-codec-http2) before version 4.1.60.Final there is a vulnerability that enables request smuggling. If a Content-Length header is present in the original HTTP/2 request, the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is fine as long as the request is not proxied through as HTTP/1.1. If the request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1 domain objects (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel&apos;s pipeline and proxied through a remote peer as HTTP/1.1 this may result in request smuggling. In a proxy case, users may assume the content-length is validated somehow, which is not the case. If the request is forwarded to a backend channel that is a HTTP/1.1 connection, the Content-Length now has meaning and needs to be checked. An attacker can smuggle requests inside the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example attack refer to the linked GitHub Advisory. Users are only affected if all of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects, and these HTTP/1.1 objects are forwarded to another remote peer. This has been patched in 4.1.60.Final As a workaround, the user can do the validation by themselves by implementing a custom `ChannelInboundHandler` that is put in the `ChannelPipeline` behind `Http2StreamFrameToHttpObjectCodec`.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client-internal/1.13.2.Final/quarkus-kubernetes-client-internal-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2019-11246" name="pkg:maven/io.quarkus/quarkus-kubernetes-client-internal@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The kubectl cp command allows copying files between containers and the user machine. To copy files from a container, Kubernetes runs tar inside the container to create a tar archive, copies it over the network, and kubectl unpacks it on the user’s machine. If the tar binary in the container is malicious, it could run any code and output unexpected, malicious results. An attacker could use this to write files to any path on the user’s machine when kubectl cp is called, limited only by the system permissions of the local user. Kubernetes affected versions include versions prior to 1.12.9, versions prior to 1.13.6, versions prior to 1.14.2, and versions 1.1, 1.2, 1.4, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 1.10, 1.11.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client-internal/1.13.2.Final/quarkus-kubernetes-client-internal-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2020-8555" name="pkg:maven/io.quarkus/quarkus-kubernetes-client-internal@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The Kubernetes kube-controller-manager in versions v1.0-1.14, versions prior to v1.15.12, v1.16.9, v1.17.5, and version v1.18.0 are vulnerable to a Server Side Request Forgery (SSRF) that allows certain authorized users to leak up to 500 bytes of arbitrary information from unprotected endpoints within the master&apos;s host network (such as link-local or loopback services).</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client-internal/1.13.2.Final/quarkus-kubernetes-client-internal-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2019-11254" name="pkg:maven/io.quarkus/quarkus-kubernetes-client-internal@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The Kubernetes API Server component in versions 1.1-1.14, and versions prior to 1.15.10, 1.16.7 and 1.17.3 allows an authorized user who sends malicious YAML payloads to cause the kube-apiserver to consume excessive CPU cycles while parsing YAML.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client-internal/1.13.2.Final/quarkus-kubernetes-client-internal-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2020-8554" name="pkg:maven/io.quarkus/quarkus-kubernetes-client-internal@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Kubernetes API server in all versions allow an attacker who is able to create a ClusterIP service and set the spec.externalIPs field, to intercept traffic to that IP address. Additionally, an attacker who is able to patch the status (which is considered a privileged operation and should not typically be granted to users) of a LoadBalancer service can set the status.loadBalancer.ingress.ip to similar effect.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client-internal/1.13.2.Final/quarkus-kubernetes-client-internal-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2019-1002100" name="pkg:maven/io.quarkus/quarkus-kubernetes-client-internal@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>In all Kubernetes versions prior to v1.11.8, v1.12.6, and v1.13.4, users that are authorized to make patch requests to the Kubernetes API Server can send a specially crafted patch of type &quot;json-patch&quot; (e.g. `kubectl patch --type json` or `&quot;Content-Type: application/json-patch+json&quot;`) that consumes excessive resources while processing, causing a Denial of Service on the API Server.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client-internal/1.13.2.Final/quarkus-kubernetes-client-internal-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2019-11244" name="pkg:maven/io.quarkus/quarkus-kubernetes-client-internal@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>In Kubernetes v1.8.x-v1.14.x, schema info is cached by kubectl in the location specified by --cache-dir (defaulting to $HOME/.kube/http-cache), written with world-writeable permissions (rw-rw-rw-). If --cache-dir is specified and pointed at a different location accessible to other users/groups, the written files may be modified by other users/groups and disrupt the kubectl invocation.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client-internal/1.13.2.Final/quarkus-kubernetes-client-internal-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2019-11249" name="pkg:maven/io.quarkus/quarkus-kubernetes-client-internal@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The kubectl cp command allows copying files between containers and the user machine. To copy files from a container, Kubernetes runs tar inside the container to create a tar archive, copies it over the network, and kubectl unpacks it on the user’s machine. If the tar binary in the container is malicious, it could run any code and output unexpected, malicious results. An attacker could use this to write files to any path on the user’s machine when kubectl cp is called, limited only by the system permissions of the local user. Kubernetes affected versions include versions prior to 1.13.9, versions prior to 1.14.5, versions prior to 1.15.2, and versions 1.1, 1.2, 1.4, 1.4, 1.5, 1.6, 1.7, 1.8, 1.9, 1.10, 1.11, 1.12.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client-internal/1.13.2.Final/quarkus-kubernetes-client-internal-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2020-8552" name="pkg:maven/io.quarkus/quarkus-kubernetes-client-internal@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The Kubernetes API server component in versions prior to 1.15.9, 1.16.0-1.16.6, and 1.17.0-1.17.2 has been found to be vulnerable to a denial of service attack via successful API requests.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client-internal/1.13.2.Final/quarkus-kubernetes-client-internal-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2020-8563" name="pkg:maven/io.quarkus/quarkus-kubernetes-client-internal@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>In Kubernetes clusters using VSphere as a cloud provider, with a logging level set to 4 or above, VSphere cloud credentials will be leaked in the cloud controller manager&apos;s log. This affects &lt; v1.19.3.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client-internal/1.13.2.Final/quarkus-kubernetes-client-internal-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2019-11247" name="pkg:maven/io.quarkus/quarkus-kubernetes-client-internal@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The Kubernetes kube-apiserver mistakenly allows access to a cluster-scoped custom resource if the request is made as if the resource were namespaced. Authorizations for the resource accessed in this manner are enforced using roles and role bindings within the namespace, meaning that a user with access only to a resource in one namespace could create, view update or delete the cluster-scoped resource (according to their namespace role privileges). Kubernetes affected versions include versions prior to 1.13.9, versions prior to 1.14.5, versions prior to 1.15.2, and versions 1.7, 1.8, 1.9, 1.10, 1.11, 1.12.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client-internal/1.13.2.Final/quarkus-kubernetes-client-internal-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2019-11248" name="pkg:maven/io.quarkus/quarkus-kubernetes-client-internal@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The debugging endpoint /debug/pprof is exposed over the unauthenticated Kubelet healthz port. The go pprof endpoint is exposed over the Kubelet&apos;s healthz port. This debugging endpoint can potentially leak sensitive information such as internal Kubelet memory addresses and configuration, or for limited denial of service. Versions prior to 1.15.0, 1.14.4, 1.13.8, and 1.12.10 are affected. The issue is of medium severity, but not exposed by the default configuration.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client-internal/1.13.2.Final/quarkus-kubernetes-client-internal-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2019-9946" name="pkg:maven/io.quarkus/quarkus-kubernetes-client-internal@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Cloud Native Computing Foundation (CNCF) CNI (Container Networking Interface) 0.7.4 has a network firewall misconfiguration which affects Kubernetes. The CNI &apos;portmap&apos; plugin, used to setup HostPorts for CNI, inserts rules at the front of the iptables nat chains; which take precedence over the KUBE- SERVICES chain. Because of this, the HostPort/portmap rule could match incoming traffic even if there were better fitting, more specific service definition rules like NodePorts later in the chain. The issue is fixed in CNI 0.7.5 and Kubernetes 1.11.9, 1.12.7, 1.13.5, and 1.14.0.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client-internal/1.13.2.Final/quarkus-kubernetes-client-internal-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2018-1002102" name="pkg:maven/io.quarkus/quarkus-kubernetes-client-internal@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>Improper validation of URL redirection in the Kubernetes API server in versions prior to v1.14.0 allows an attacker-controlled Kubelet to redirect API server requests from streaming endpoints to arbitrary hosts. Impacted API servers will follow the redirect as a GET request with client-certificate credentials for authenticating to the Kubelet.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client-internal/1.13.2.Final/quarkus-kubernetes-client-internal-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2019-1002101" name="pkg:maven/io.quarkus/quarkus-kubernetes-client-internal@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The kubectl cp command allows copying files between containers and the user machine. To copy files from a container, Kubernetes creates a tar inside the container, copies it over the network, and kubectl unpacks it on the user’s machine. If the tar binary in the container is malicious, it could run any code and output unexpected, malicious results. An attacker could use this to write files to any path on the user’s machine when kubectl cp is called, limited only by the system permissions of the local user. The untar function can both create and follow symbolic links. The issue is resolved in kubectl v1.11.9, v1.12.7, v1.13.5, and v1.14.0.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client-internal/1.13.2.Final/quarkus-kubernetes-client-internal-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2019-11252" name="pkg:maven/io.quarkus/quarkus-kubernetes-client-internal@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The Kubernetes kube-controller-manager in versions v1.0-v1.17 is vulnerable to a credential leakage via error messages in mount failure logs and events for AzureFile and CephFS volumes.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client-internal/1.13.2.Final/quarkus-kubernetes-client-internal-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2020-8559" name="pkg:maven/io.quarkus/quarkus-kubernetes-client-internal@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The Kubernetes kube-apiserver in versions v1.6-v1.15, and versions prior to v1.16.13, v1.17.9 and v1.18.6 are vulnerable to an unvalidated redirect on proxied upgrade requests that could allow an attacker to escalate privileges from a node compromise to a full cluster compromise.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client-internal/1.13.2.Final/quarkus-kubernetes-client-internal-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2019-11250" name="pkg:maven/io.quarkus/quarkus-kubernetes-client-internal@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The Kubernetes client-go library logs request headers at verbosity levels of 7 or higher. This can disclose credentials to unauthorized users via logs or command output. Kubernetes components (such as kube-apiserver) prior to v1.16.0, which make use of basic or bearer token authentication, and run at high verbosity levels, are affected.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client-internal/1.13.2.Final/quarkus-kubernetes-client-internal-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2020-8558" name="pkg:maven/io.quarkus/quarkus-kubernetes-client-internal@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The Kubelet and kube-proxy components in versions 1.1.0-1.16.10, 1.17.0-1.17.6, and 1.18.0-1.18.3 were found to contain a security issue which allows adjacent hosts to reach TCP and UDP services bound to 127.0.0.1 running on the node or in the node&apos;s network namespace. Such a service is generally thought to be reachable only by other processes on the same host, but due to this defeect, could be reachable by other hosts on the same LAN as the node, or by containers running on the same node as the service.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client-internal/1.13.2.Final/quarkus-kubernetes-client-internal-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2019-11251" name="pkg:maven/io.quarkus/quarkus-kubernetes-client-internal@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The Kubernetes kubectl cp command in versions 1.1-1.12, and versions prior to 1.13.11, 1.14.7, and 1.15.4 allows a combination of two symlinks provided by tar output of a malicious container to place a file outside of the destination directory specified in the kubectl cp invocation. This could be used to allow an attacker to place a nefarious file using a symlink, outside of the destination tree.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client-internal/1.13.2.Final/quarkus-kubernetes-client-internal-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2020-8557" name="pkg:maven/io.quarkus/quarkus-kubernetes-client-internal@1.13.2.Final"><skipped message="A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs. A whole lot of false positives based on K8S&apos;s internals that have nothing to do with our CRDs" /><system-out>The Kubernetes kubelet component in versions 1.1-1.16.12, 1.17.0-1.17.8 and 1.18.0-1.18.5 do not account for disk usage by a pod which writes to its own /etc/hosts file. The /etc/hosts file mounted in a pod by kubelet is not included by the kubelet eviction manager when calculating ephemeral storage usage by a pod. If a pod writes a large amount of data to the /etc/hosts file, it could fill the storage space of the node and cause the node to fail.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-kubernetes-client-internal/1.13.2.Final/quarkus-kubernetes-client-internal-1.13.2.Final.jar</system-err></testcase></testsuite><testsuite failures="4" id="92" name="/home/jenkins/.mvnrepository/io/quarkus/quarkus-picocli/1.13.2.Final/quarkus-picocli-1.13.2.Final.jar" package="quarkus-picocli-1.13.2.Final.jar" skipped="0" tests="4" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2021-20289" name="pkg:maven/io.quarkus/quarkus-picocli@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 5.3 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:L/I:N/A:N)"/><system-out>A flaw was found in RESTEasy in all versions of RESTEasy up to 4.6.0.Final. The endpoint class and method names are returned as part of the exception response when RESTEasy cannot convert one of the request URI path or query values to the matching JAX-RS resource method&apos;s parameter value. The highest threat from this vulnerability is to data confidentiality.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-picocli/1.13.2.Final/quarkus-picocli-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2021-20328" name="pkg:maven/io.quarkus/quarkus-picocli@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 6.8 (CVSS:3.1/AV:A/AC:H/PR:N/UI:N/S:U/C:H/I:H/A:N)"/><system-out>Specific versions of the Java driver that support client-side field level encryption (CSFLE) fail to perform correct host name verification on the KMS server’s certificate. This vulnerability in combination with a privileged network position active MITM attack could result in interception of traffic between the Java driver and the KMS service rendering Field Level Encryption ineffective. This issue was discovered during internal testing and affects all versions of the Java driver that support CSFLE. The Java async, Scala, and reactive streams drivers are not impacted. This vulnerability does not impact driver traffic payloads with CSFLE-supported key services originating from applications residing inside the AWS, GCP, and Azure network fabrics due to compensating controls in these environments. This issue does not impact driver workloads that don’t use Field Level Encryption.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-picocli/1.13.2.Final/quarkus-picocli-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2021-21290" name="pkg:maven/io.quarkus/quarkus-picocli@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 5.5 (CVSS:3.1/AV:L/AC:L/PR:L/UI:N/S:U/C:H/I:N/A:N)"/><system-out>Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty&apos;s multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method &quot;File.createTempFile&quot; on unix-like systems creates a random file, but, by default will create this file with the permissions &quot;-rw-r--r--&quot;. Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty&apos;s &quot;AbstractDiskHttpData&quot; is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own &quot;java.io.tmpdir&quot; when you start the JVM or use &quot;DefaultHttpDataFactory.setBaseDir(...)&quot; to set the directory to something that is only readable by the current user.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-picocli/1.13.2.Final/quarkus-picocli-1.13.2.Final.jar</system-err></testcase><testcase classname="CVE-2021-21295" name="pkg:maven/io.quarkus/quarkus-picocli@1.13.2.Final"><failure message="cvssV3: MEDIUM, score: 5.9 (CVSS:3.1/AV:N/AC:H/PR:N/UI:N/S:U/C:N/I:H/A:N)"/><system-out>Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers &amp; clients. In Netty (io.netty:netty-codec-http2) before version 4.1.60.Final there is a vulnerability that enables request smuggling. If a Content-Length header is present in the original HTTP/2 request, the field is not validated by `Http2MultiplexHandler` as it is propagated up. This is fine as long as the request is not proxied through as HTTP/1.1. If the request comes in as an HTTP/2 stream, gets converted into the HTTP/1.1 domain objects (`HttpRequest`, `HttpContent`, etc.) via `Http2StreamFrameToHttpObjectCodec `and then sent up to the child channel&apos;s pipeline and proxied through a remote peer as HTTP/1.1 this may result in request smuggling. In a proxy case, users may assume the content-length is validated somehow, which is not the case. If the request is forwarded to a backend channel that is a HTTP/1.1 connection, the Content-Length now has meaning and needs to be checked. An attacker can smuggle requests inside the body as it gets downgraded from HTTP/2 to HTTP/1.1. For an example attack refer to the linked GitHub Advisory. Users are only affected if all of this is true: `HTTP2MultiplexCodec` or `Http2FrameCodec` is used, `Http2StreamFrameToHttpObjectCodec` is used to convert to HTTP/1.1 objects, and these HTTP/1.1 objects are forwarded to another remote peer. This has been patched in 4.1.60.Final As a workaround, the user can do the validation by themselves by implementing a custom `ChannelInboundHandler` that is put in the `ChannelPipeline` behind `Http2StreamFrameToHttpObjectCodec`.</system-out><system-err>location: /home/jenkins/.mvnrepository/io/quarkus/quarkus-picocli/1.13.2.Final/quarkus-picocli-1.13.2.Final.jar</system-err></testcase></testsuite><testsuite failures="0" id="93" name="/home/jenkins/.mvnrepository/org/reactivestreams/reactive-streams/1.0.3/reactive-streams-1.0.3.jar" package="reactive-streams-1.0.3.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="reactive-streams-1.0.3.jar"/></testsuite><testsuite failures="1" id="94" name="/home/jenkins/.mvnrepository/org/jboss/resteasy/resteasy-client/3.15.0.Final/resteasy-client-3.15.0.Final.jar" package="resteasy-client-3.15.0.Final.jar" skipped="1" tests="2" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2020-14326" name="pkg:maven/org.jboss.resteasy/resteasy-client@3.15.0.Final"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>A vulnerability was found in RESTEasy, where RootNode incorrectly caches routes. This issue results in hash flooding, leading to slower requests with higher CPU time spent searching and adding the entry. This flaw allows an attacker to cause a denial of service.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/jboss/resteasy/resteasy-client/3.15.0.Final/resteasy-client-3.15.0.Final.jar</system-err></testcase><testcase classname="CVE-2021-20289" name="pkg:maven/org.jboss.resteasy/resteasy-client@3.15.0.Final"><skipped message="Not much we can do about this one except for wait for Keycloak 8. We can only update the client if the
        server is updated." /><system-out>A flaw was found in RESTEasy in all versions of RESTEasy up to 4.6.0.Final. The endpoint class and method names are returned as part of the exception response when RESTEasy cannot convert one of the request URI path or query values to the matching JAX-RS resource method&apos;s parameter value. The highest threat from this vulnerability is to data confidentiality.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/jboss/resteasy/resteasy-client/3.15.0.Final/resteasy-client-3.15.0.Final.jar</system-err></testcase></testsuite><testsuite failures="1" id="95" name="/home/jenkins/.mvnrepository/org/jboss/resteasy/resteasy-jackson2-provider/3.15.0.Final/resteasy-jackson2-provider-3.15.0.Final.jar" package="resteasy-jackson2-provider-3.15.0.Final.jar" skipped="1" tests="2" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2020-14326" name="pkg:maven/org.jboss.resteasy/resteasy-jackson2-provider@3.15.0.Final"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>A vulnerability was found in RESTEasy, where RootNode incorrectly caches routes. This issue results in hash flooding, leading to slower requests with higher CPU time spent searching and adding the entry. This flaw allows an attacker to cause a denial of service.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/jboss/resteasy/resteasy-jackson2-provider/3.15.0.Final/resteasy-jackson2-provider-3.15.0.Final.jar</system-err></testcase><testcase classname="CVE-2021-20289" name="pkg:maven/org.jboss.resteasy/resteasy-jackson2-provider@3.15.0.Final"><skipped message="Not much we can do about this one except for wait for Keycloak 8. We can only update the client if the
        server is updated." /><system-out>A flaw was found in RESTEasy in all versions of RESTEasy up to 4.6.0.Final. The endpoint class and method names are returned as part of the exception response when RESTEasy cannot convert one of the request URI path or query values to the matching JAX-RS resource method&apos;s parameter value. The highest threat from this vulnerability is to data confidentiality.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/jboss/resteasy/resteasy-jackson2-provider/3.15.0.Final/resteasy-jackson2-provider-3.15.0.Final.jar</system-err></testcase></testsuite><testsuite failures="1" id="96" name="/home/jenkins/.mvnrepository/org/jboss/resteasy/resteasy-jaxb-provider/3.15.0.Final/resteasy-jaxb-provider-3.15.0.Final.jar" package="resteasy-jaxb-provider-3.15.0.Final.jar" skipped="1" tests="2" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2020-14326" name="pkg:maven/org.jboss.resteasy/resteasy-jaxb-provider@3.15.0.Final"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>A vulnerability was found in RESTEasy, where RootNode incorrectly caches routes. This issue results in hash flooding, leading to slower requests with higher CPU time spent searching and adding the entry. This flaw allows an attacker to cause a denial of service.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/jboss/resteasy/resteasy-jaxb-provider/3.15.0.Final/resteasy-jaxb-provider-3.15.0.Final.jar</system-err></testcase><testcase classname="CVE-2021-20289" name="pkg:maven/org.jboss.resteasy/resteasy-jaxb-provider@3.15.0.Final"><skipped message="Not much we can do about this one except for wait for Keycloak 8. We can only update the client if the
        server is updated." /><system-out>A flaw was found in RESTEasy in all versions of RESTEasy up to 4.6.0.Final. The endpoint class and method names are returned as part of the exception response when RESTEasy cannot convert one of the request URI path or query values to the matching JAX-RS resource method&apos;s parameter value. The highest threat from this vulnerability is to data confidentiality.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/jboss/resteasy/resteasy-jaxb-provider/3.15.0.Final/resteasy-jaxb-provider-3.15.0.Final.jar</system-err></testcase></testsuite><testsuite failures="1" id="97" name="/home/jenkins/.mvnrepository/org/jboss/resteasy/resteasy-jaxrs/3.15.0.Final/resteasy-jaxrs-3.15.0.Final.jar" package="resteasy-jaxrs-3.15.0.Final.jar" skipped="1" tests="2" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2020-14326" name="pkg:maven/org.jboss.resteasy/resteasy-jaxrs@3.15.0.Final"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>A vulnerability was found in RESTEasy, where RootNode incorrectly caches routes. This issue results in hash flooding, leading to slower requests with higher CPU time spent searching and adding the entry. This flaw allows an attacker to cause a denial of service.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/jboss/resteasy/resteasy-jaxrs/3.15.0.Final/resteasy-jaxrs-3.15.0.Final.jar</system-err></testcase><testcase classname="CVE-2021-20289" name="pkg:maven/org.jboss.resteasy/resteasy-jaxrs@3.15.0.Final"><skipped message="Not much we can do about this one except for wait for Keycloak 8. We can only update the client if the
        server is updated." /><system-out>A flaw was found in RESTEasy in all versions of RESTEasy up to 4.6.0.Final. The endpoint class and method names are returned as part of the exception response when RESTEasy cannot convert one of the request URI path or query values to the matching JAX-RS resource method&apos;s parameter value. The highest threat from this vulnerability is to data confidentiality.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/jboss/resteasy/resteasy-jaxrs/3.15.0.Final/resteasy-jaxrs-3.15.0.Final.jar</system-err></testcase></testsuite><testsuite failures="1" id="98" name="/home/jenkins/.mvnrepository/org/jboss/resteasy/resteasy-multipart-provider/3.15.0.Final/resteasy-multipart-provider-3.15.0.Final.jar" package="resteasy-multipart-provider-3.15.0.Final.jar" skipped="1" tests="2" timestamp="2021-06-14T13:18:06.162586"><testcase classname="CVE-2020-14326" name="pkg:maven/org.jboss.resteasy/resteasy-multipart-provider@3.15.0.Final"><failure message="cvssV3: HIGH, score: 7.5 (CVSS:3.1/AV:N/AC:L/PR:N/UI:N/S:U/C:N/I:N/A:H)"/><system-out>A vulnerability was found in RESTEasy, where RootNode incorrectly caches routes. This issue results in hash flooding, leading to slower requests with higher CPU time spent searching and adding the entry. This flaw allows an attacker to cause a denial of service.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/jboss/resteasy/resteasy-multipart-provider/3.15.0.Final/resteasy-multipart-provider-3.15.0.Final.jar</system-err></testcase><testcase classname="CVE-2021-20289" name="pkg:maven/org.jboss.resteasy/resteasy-multipart-provider@3.15.0.Final"><skipped message="Not much we can do about this one except for wait for Keycloak 8. We can only update the client if the
        server is updated." /><system-out>A flaw was found in RESTEasy in all versions of RESTEasy up to 4.6.0.Final. The endpoint class and method names are returned as part of the exception response when RESTEasy cannot convert one of the request URI path or query values to the matching JAX-RS resource method&apos;s parameter value. The highest threat from this vulnerability is to data confidentiality.</system-out><system-err>location: /home/jenkins/.mvnrepository/org/jboss/resteasy/resteasy-multipart-provider/3.15.0.Final/resteasy-multipart-provider-3.15.0.Final.jar</system-err></testcase></testsuite><testsuite failures="0" id="99" name="/home/jenkins/.mvnrepository/org/slf4j/slf4j-api/1.7.16/slf4j-api-1.7.16.jar" package="slf4j-api-1.7.16.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="slf4j-api-1.7.16.jar"/></testsuite><testsuite failures="0" id="100" name="/home/jenkins/.mvnrepository/org/jboss/slf4j/slf4j-jboss-logmanager/1.1.0.Final/slf4j-jboss-logmanager-1.1.0.Final.jar" package="slf4j-jboss-logmanager-1.1.0.Final.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="slf4j-jboss-logmanager-1.1.0.Final.jar"/></testsuite><testsuite failures="0" id="101" name="/home/jenkins/.mvnrepository/io/smallrye/common/smallrye-common-annotation/1.5.0/smallrye-common-annotation-1.5.0.jar" package="smallrye-common-annotation-1.5.0.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="smallrye-common-annotation-1.5.0.jar"/></testsuite><testsuite failures="0" id="102" name="/home/jenkins/.mvnrepository/io/smallrye/common/smallrye-common-classloader/1.5.0/smallrye-common-classloader-1.5.0.jar" package="smallrye-common-classloader-1.5.0.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="smallrye-common-classloader-1.5.0.jar"/></testsuite><testsuite failures="0" id="103" name="/home/jenkins/.mvnrepository/io/smallrye/common/smallrye-common-constraint/1.5.0/smallrye-common-constraint-1.5.0.jar" package="smallrye-common-constraint-1.5.0.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="smallrye-common-constraint-1.5.0.jar"/></testsuite><testsuite failures="0" id="104" name="/home/jenkins/.mvnrepository/io/smallrye/common/smallrye-common-expression/1.5.0/smallrye-common-expression-1.5.0.jar" package="smallrye-common-expression-1.5.0.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="smallrye-common-expression-1.5.0.jar"/></testsuite><testsuite failures="0" id="105" name="/home/jenkins/.mvnrepository/io/smallrye/common/smallrye-common-function/1.5.0/smallrye-common-function-1.5.0.jar" package="smallrye-common-function-1.5.0.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="smallrye-common-function-1.5.0.jar"/></testsuite><testsuite failures="0" id="106" name="/home/jenkins/.mvnrepository/io/smallrye/common/smallrye-common-io/1.5.0/smallrye-common-io-1.5.0.jar" package="smallrye-common-io-1.5.0.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="smallrye-common-io-1.5.0.jar"/></testsuite><testsuite failures="0" id="107" name="/home/jenkins/.mvnrepository/io/smallrye/config/smallrye-config/1.11.1/smallrye-config-1.11.1.jar" package="smallrye-config-1.11.1.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="smallrye-config-1.11.1.jar"/></testsuite><testsuite failures="0" id="108" name="/home/jenkins/.mvnrepository/io/smallrye/config/smallrye-config-common/1.11.1/smallrye-config-common-1.11.1.jar" package="smallrye-config-common-1.11.1.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="smallrye-config-common-1.11.1.jar"/></testsuite><testsuite failures="0" id="109" name="/home/jenkins/.mvnrepository/io/smallrye/config/smallrye-config-source-yaml/1.11.1/smallrye-config-source-yaml-1.11.1.jar" package="smallrye-config-source-yaml-1.11.1.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="smallrye-config-source-yaml-1.11.1.jar"/></testsuite><testsuite failures="0" id="110" name="/home/jenkins/.mvnrepository/org/yaml/snakeyaml/1.27/snakeyaml-1.27.jar" package="snakeyaml-1.27.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="snakeyaml-1.27.jar"/></testsuite><testsuite failures="0" id="111" name="/home/jenkins/.mvnrepository/org/glassfish/jaxb/txw2/2.3.3-b02/txw2-2.3.3-b02.jar" package="txw2-2.3.3-b02.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="txw2-2.3.3-b02.jar"/></testsuite><testsuite failures="0" id="112" name="/home/jenkins/.mvnrepository/org/wildfly/common/wildfly-common/1.5.4.Final-format-001/wildfly-common-1.5.4.Final-format-001.jar" package="wildfly-common-1.5.4.Final-format-001.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="wildfly-common-1.5.4.Final-format-001.jar"/></testsuite><testsuite failures="0" id="113" name="/home/jenkins/.mvnrepository/io/fabric8/zjsonpatch/0.3.0/zjsonpatch-0.3.0.jar" package="zjsonpatch-0.3.0.jar" skipped="0" tests="1" timestamp="2021-06-14T13:18:06.162586"><testcase classname="dependency-check" name="zjsonpatch-0.3.0.jar"/></testsuite></testsuites>